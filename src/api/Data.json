[{"_id":"5b3b112068359b1e2028a2f3","name":"naice","img":"https://sfault-avatar.b0.upaiyun.com/188/496/1884968264-59095d0d38f64_huge256","title":"试着用Proxy 实现一个简单mvvm","content":"<h2><a href='https://segmentfault.com/a/1190000015460479'>原文地址</a></h2><div class=\"article fmt article__content\" data-id=\"1190000015460479\" data-license=\"cc\">\n                    \n<h3 id=\"articleHeader0\">Proxy、Reflect的简单概述</h3>\n<blockquote>Proxy 可以理解成，在目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和改写。Proxy 这个词的原意是代理，用在这里表示由它来“代理”某些操作，可以译为“代理器”。<br>出自阮一峰老师的ECMAScript 6 入门，详细点击<a href=\"http://es6.ruanyifeng.com/#docs/proxy\" rel=\"nofollow noreferrer\" target=\"_blank\">http://es6.ruanyifeng.com/#docs/proxy</a>\n</blockquote>\n<p>例如：</p>\n<div class=\"widget-codetool\" style=\"display: none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"var obj = new Proxy({}, {\n  get: function (target, key, receiver) {\n    console.log(`getting ${key}!`);\n    return Reflect.get(target, key, receiver);\n  },\n  set: function (target, key, value, receiver) {\n    console.log(`setting ${key}!`);\n    return Reflect.set(target, key, value, receiver);\n  }\n});\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs javascript\"><code><span class=\"hljs-keyword\">var</span> obj = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Proxy</span>({}, {\n  <span class=\"hljs-attr\">get</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target, key, receiver</span>) </span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`getting <span class=\"hljs-subst\">${key}</span>!`</span>);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Reflect</span>.get(target, key, receiver);\n  },\n  <span class=\"hljs-attr\">set</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">target, key, value, receiver</span>) </span>{\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`setting <span class=\"hljs-subst\">${key}</span>!`</span>);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Reflect</span>.set(target, key, value, receiver);\n  }\n});</code></pre>\n<p>上面代码对一个空对象架设了一层拦截，重定义了属性的读取（get）和设置（set）行为。这里暂时先不解释具体的语法，只看运行结果。对设置了拦截行为的对象obj，去读写它的属性，就会得到下面的结果。</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"obj.count = 1\n//  setting count!\n++obj.count\n//  getting count!\n//  setting count!\n//  2\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs stylus\"><code>obj<span class=\"hljs-selector-class\">.count</span> = <span class=\"hljs-number\">1</span>\n<span class=\"hljs-comment\">//  setting count!</span>\n++obj<span class=\"hljs-selector-class\">.count</span>\n<span class=\"hljs-comment\">//  getting count!</span>\n<span class=\"hljs-comment\">//  setting count!</span>\n<span class=\"hljs-comment\">//  2</span></code></pre>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"var proxy = new Proxy(target, handler);\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs aspectj\"><code style=\"word-break: break-word; white-space: initial;\">var proxy = <span class=\"hljs-keyword\">new</span> Proxy(<span class=\"hljs-keyword\">target</span>, <span class=\"hljs-keyword\">handler</span>);</code></pre>\n<p>这里有两个参数，<code>target</code>参数表示所要拦截的目标对象，<code>handler</code>参数也是一个对象，用来定制拦截行为。</p>\n<blockquote>注意，要使得<code>Proxy</code>起作用，必须针对<code>Proxy</code>实例（上例是<code>proxy</code>对象）进行操作，而不是针对目标对象（上例是空对象）进行操作。</blockquote>\n<p><code>Reflect对</code>象与<code>Proxy</code>对象一样，也是 <code>ES6</code> 为了操作对象而提供的新<code> API</code>。</p>\n<p><code>Reflect</code>对象的方法与<code>Proxy</code>对象的方法一一对应，只要是Proxy对象的方法，就能在<code>Reflect</code>对象上找到对应的方法。这就让<code>Proxy</code>对象可以方便地调用对应的Reflect方法，完成默认行为，作为修改行为的基础。也就是说，不管<code>Proxy</code>怎么修改默认行为，你总可以在<code>Reflect</code>上获取默认行为。</p>\n<p>同样也放上阮一峰老师的链接<a href=\"http://es6.ruanyifeng.com/#docs/reflect\" rel=\"nofollow noreferrer\" target=\"_blank\">http://es6.ruanyifeng.com/#docs/reflect</a></p>\n<h3 id=\"articleHeader1\">初始化结构</h3>\n<p>看到这里，我就当大家有比较明白<code>Proxy</code>（代理）是做什么用的，然后下面我们看下要做最终的图骗。<br><span class=\"img-wrap\"><img data-src=\"/img/remote/1460000015460482?w=564&amp;h=475\" src=\"https://static.segmentfault.com/v-5b3afb96/global/img/squares.svg\" alt=\"\" title=\"\" style=\"cursor: pointer;\"></span></p>\n<p>看到上面的图片，首先我们新建一个<code>index.html</code>，然后里面的代码是这样子滴。很简单</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"<!DOCTYPE html>\n<html lang=&quot;en&quot;>\n<head>\n    <meta charset=&quot;UTF-8&quot;>\n    <title>简单版mvvm</title>\n</head>\n<body>\n<div id=&quot;app&quot;>\n    <h1>开发语言：{{language}}</h1>\n    <h2>组成部分：</h2>\n    <ul>\n        <li>{{makeUp.one}}</li>\n        <li>{{makeUp.two}}</li>\n        <li>{{makeUp.three}}</li>\n    </ul>\n    <h2>描述：</h2>\n    <p>{{describe}}</p>\n    <p>计算属性：{{sum}}</p>\n    <input placeholder=&quot;123&quot; v-module=&quot;language&quot; />\n</div>\n<script>\n// 写法和Vue一样\nconst mvvm = new Mvvm({\n    el: '#app',\n    data: {\n        language: 'Javascript',\n        makeUp: {\n            one: 'ECMAScript',\n            two: '文档对象模型（DOM）',\n            three: '浏览器对象模型（BOM）'\n        },\n        describe: '没什么产品是写不了的',\n        a: 1,\n        b: 2\n    },\n    computed: {\n        sum() {\n        return this.a + this.b\n    }\n})\n</script>\n</body>\n</html>\n\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs django\"><code><span class=\"xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>简单版mvvm<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"app\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>开发语言：</span><span class=\"hljs-template-variable\">{{language}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>组成部分：<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span></span><span class=\"hljs-template-variable\">{{makeUp.one}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span></span><span class=\"hljs-template-variable\">{{makeUp.two}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span></span><span class=\"hljs-template-variable\">{{makeUp.three}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>描述：<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span></span><span class=\"hljs-template-variable\">{{describe}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>计算属性：</span><span class=\"hljs-template-variable\">{{sum}}</span><span class=\"xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"123\"</span> <span class=\"hljs-attr\">v-module</span>=<span class=\"hljs-string\">\"language\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"actionscript\">\n<span class=\"hljs-comment\">// 写法和Vue一样</span>\n<span class=\"hljs-keyword\">const</span> mvvm = <span class=\"hljs-keyword\">new</span> Mvvm({\n    el: <span class=\"hljs-string\">'#app'</span>,\n    data: {\n        language: <span class=\"hljs-string\">'Javascript'</span>,\n        makeUp: {\n            one: <span class=\"hljs-string\">'ECMAScript'</span>,\n            two: <span class=\"hljs-string\">'文档对象模型（DOM）'</span>,\n            three: <span class=\"hljs-string\">'浏览器对象模型（BOM）'</span>\n        },\n        describe: <span class=\"hljs-string\">'没什么产品是写不了的'</span>,\n        a: <span class=\"hljs-number\">1</span>,\n        b: <span class=\"hljs-number\">2</span>\n    },\n    computed: {\n        sum() {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.a + <span class=\"hljs-keyword\">this</span>.b\n    }\n})\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</span></code></pre>\n<p>看到上面的代码，大概跟<code>vue</code>长得差不多，下面去实现<code>Mvvm</code>这个构造函数</p>\n<h3 id=\"articleHeader2\">实现Mvvm这个构造函数</h3>\n<p>首先声明一个<code>Mvvm</code>函数，<code>options</code>当作参数传进来，<code>options</code>就是上面代码的配置，里面有<code>el</code>、<code>data</code>、<code>computed</code>~~</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function Mvvm(options = {}) {\n    // 把options 赋值给this.$options\n    this.$options = options\n    // 把options.data赋值给this._data\n    let data = this._data = this.$options.data\n    let vm = initVm.call(this)\n    return this._vm\n}\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs kotlin\"><code>function Mvvm(options = {}) {\n    <span class=\"hljs-comment\">// 把options 赋值给this.$options</span>\n    <span class=\"hljs-keyword\">this</span>.$options = options\n    <span class=\"hljs-comment\">// 把options.data赋值给this._data</span>\n    let <span class=\"hljs-keyword\">data</span> = <span class=\"hljs-keyword\">this</span>._data = <span class=\"hljs-keyword\">this</span>.$options.<span class=\"hljs-keyword\">data</span>\n    let vm = initVm.call(<span class=\"hljs-keyword\">this</span>)\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>._vm\n}</code></pre>\n<p>上面Mvvm函数很简单，就是把<code>参数options</code> 赋值给<code>this.$options</code>、把<code>options.data</code>赋值给<code>this._data</code>、然后调用初始化<code>initVm</code>函数,并用<code>call</code>改变<code>this</code>的指向，方便<code>initVm</code>函操作。然后返回一个<code>this._vm</code>，这个是在<code>initVm</code>函数生成的。</p>\n<p>下面继续写<code>initVm</code>函数，</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"\nfunction initVm () {\n    this._vm = new Proxy(this, {\n        // 拦截get\n        get: (target, key, receiver) => {\n            return this[key] || this._data[key] || this._computed[key]\n        },\n        // 拦截set\n        set: (target, key, value) => {\n            return Reflect.set(this._data, key, value)\n        }\n    })\n    return this._vm\n}\n\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs kotlin\"><code>\nfunction initVm () {\n    <span class=\"hljs-keyword\">this</span>._vm = new Proxy(<span class=\"hljs-keyword\">this</span>, {\n        <span class=\"hljs-comment\">// 拦截get</span>\n        <span class=\"hljs-keyword\">get</span>: (target, key, receiver) =&gt; {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>[key] || <span class=\"hljs-keyword\">this</span>._data[key] || <span class=\"hljs-keyword\">this</span>._computed[key]\n        },\n        <span class=\"hljs-comment\">// 拦截set</span>\n        <span class=\"hljs-keyword\">set</span>: (target, key, value) =&gt; {\n            <span class=\"hljs-keyword\">return</span> Reflect.<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-keyword\">this</span>._data, key, value)\n        }\n    })\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>._vm\n}\n</code></pre>\n<p>这个<code>init函数</code>用到<code>Proxy</code>拦截了，<code>this</code>对象，生产<code>Proxy</code>实例的然后赋值给<code>this._vm</code>，最后返回<code>this._vm</code>，</p>\n<blockquote>上面我们说了，要使得<code>Proxy</code>起作用，必须针对<code>Proxy</code>实例。</blockquote>\n<p>在代理里面，拦截了<code>get</code>和<code>set</code>，<code>get函数</code>里面，返回<code>this</code>对象的对应的<code>key</code>的值，没有就去<code>this._data</code>对象里面取对应的<code>key</code>，再没有去<code>this._computed</code>对象里面去对应的<code>key</code>值。<code>set函数</code>就是直接返回修改<code>this._data</code>对应<code>key</code>。</p>\n<p>做好这些各种拦截工作。我们就可以直接从实力上访问到我们相对应的值了。（mvvm使我们第一块代码生成的实例）</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"mvvm.b // 2\nmvvm.a // 1\nmvvm.language // &quot;Javascript&quot;\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs stylus\"><code>mvvm<span class=\"hljs-selector-class\">.b</span> <span class=\"hljs-comment\">// 2</span>\nmvvm<span class=\"hljs-selector-class\">.a</span> <span class=\"hljs-comment\">// 1</span>\nmvvm<span class=\"hljs-selector-class\">.language</span> <span class=\"hljs-comment\">// \"Javascript\"</span></code></pre>\n<p><span class=\"img-wrap\"><img data-src=\"/img/remote/1460000015460483?w=1150&amp;h=445\" src=\"https://static.segmentfault.com/v-5b3afb96/global/img/squares.svg\" alt=\"\" title=\"\" style=\"cursor: pointer;\"></span></p>\n<p>如上图看控制台。可以设置值，可以获取值，但是这不是响应式的。</p>\n<p>打开控制台看一下<br><span class=\"img-wrap\"><img data-src=\"/img/remote/1460000015460484?w=2012&amp;h=1032\" src=\"https://static.segmentfault.com/v-5b3afb96/global/img/squares.svg\" alt=\"\" title=\"\" style=\"cursor: pointer;\"></span></p>\n<p>可以详细的看到。只有<code>_vm</code>这个是<code>proxy</code>，我们需要的是，<code>_data</code>下面所有数据都是有拦截代理的；下面我们就去实现它。</p>\n<h3 id=\"articleHeader3\">实现所有数据代理拦截</h3>\n<p>我们首先在<code>Mvvm</code>里面加一个<code>initObserve</code>，如下</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function Mvvm(options = {}) {\n    this.$options = options\n    let data = this._data = this.$options.data\n    let vm = initVm.call(this)\n+   initObserve.call(this, data) // 初始化data的Observe\n    return this._vm\n}\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs kotlin\"><code>function Mvvm(options = {}) {\n    <span class=\"hljs-keyword\">this</span>.$options = options\n    let <span class=\"hljs-keyword\">data</span> = <span class=\"hljs-keyword\">this</span>._data = <span class=\"hljs-keyword\">this</span>.$options.<span class=\"hljs-keyword\">data</span>\n    let vm = initVm.call(<span class=\"hljs-keyword\">this</span>)\n+   initObserve.call(<span class=\"hljs-keyword\">this</span>, <span class=\"hljs-keyword\">data</span>) <span class=\"hljs-comment\">// 初始化data的Observe</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>._vm\n}</code></pre>\n<p><code>initObserve</code>这个函数主要是把，<code>this._data</code>都加上代理。如下</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"\nfunction initObserve(data) {\n    this._data = observe(data) // 把所有observe都赋值到 this._data\n}\n\n// 分开这个主要是为了下面递归调用\nfunction observe(data) {\n    if (!data || typeof data !== 'object') return data // 如果不是对象直接返回值\n    return new Observe(data) // 对象调用Observe\n}\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs kotlin\"><code>\nfunction initObserve(<span class=\"hljs-keyword\">data</span>) {\n    <span class=\"hljs-keyword\">this</span>._data = observe(<span class=\"hljs-keyword\">data</span>) <span class=\"hljs-comment\">// 把所有observe都赋值到 this._data</span>\n}\n\n<span class=\"hljs-comment\">// 分开这个主要是为了下面递归调用</span>\nfunction observe(<span class=\"hljs-keyword\">data</span>) {\n    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">data</span> || typeof <span class=\"hljs-keyword\">data</span> !== <span class=\"hljs-string\">'object'</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">data</span> <span class=\"hljs-comment\">// 如果不是对象直接返回值</span>\n    <span class=\"hljs-keyword\">return</span> new Observe(<span class=\"hljs-keyword\">data</span>) <span class=\"hljs-comment\">// 对象调用Observe</span>\n}</code></pre>\n<p>下面主要实现Observe类</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"// Observe类\nclass Observe {\n    constructor(data) {\n        this.dep = new Dep() // 订阅类，后面会介绍\n        for (let key in data) {\n            data[key] = observe(data[key]) // 递归调用子对象\n        }\n        return this.proxy(data)\n    }\n    proxy(data) {\n      let dep = this.dep\n      return new Proxy(data, {\n        get: (target, key, receiver) => {\n          return Reflect.get(target, key, receiver)\n        },\n        set: (target, key, value) => {\n          const result = Reflect.set(target, key, observe(value)) // 对于新添加的对象也要进行添加observe\n          return result  \n        }\n      })\n    }\n  }\n\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs kotlin\"><code><span class=\"hljs-comment\">// Observe类</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Observe</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(<span class=\"hljs-keyword\">data</span>) {\n        <span class=\"hljs-keyword\">this</span>.dep = new Dep() <span class=\"hljs-comment\">// 订阅类，后面会介绍</span>\n        <span class=\"hljs-keyword\">for</span> (let key <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">data</span>) {\n            <span class=\"hljs-keyword\">data</span>[key] = observe(<span class=\"hljs-keyword\">data</span>[key]) <span class=\"hljs-comment\">// 递归调用子对象</span>\n        }\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.proxy(<span class=\"hljs-keyword\">data</span>)\n    }\n    proxy(<span class=\"hljs-keyword\">data</span>) {\n      let dep = <span class=\"hljs-keyword\">this</span>.dep\n      <span class=\"hljs-keyword\">return</span> new Proxy(<span class=\"hljs-keyword\">data</span>, {\n        <span class=\"hljs-keyword\">get</span>: (target, key, receiver) =&gt; {\n          <span class=\"hljs-keyword\">return</span> Reflect.<span class=\"hljs-keyword\">get</span>(target, key, receiver)\n        },\n        <span class=\"hljs-keyword\">set</span>: (target, key, value) =&gt; {\n          const result = Reflect.<span class=\"hljs-keyword\">set</span>(target, key, observe(value)) <span class=\"hljs-comment\">// 对于新添加的对象也要进行添加observe</span>\n          <span class=\"hljs-keyword\">return</span> result  \n        }\n      })\n    }\n  }\n</code></pre>\n<p>这样子，通过我们层层递归添加<code>proxy</code>，把我们的<code>_data</code>对象都添加一遍，再看一下控制台</p>\n<p><span class=\"img-wrap\"><img data-src=\"/img/remote/1460000015460485?w=1678&amp;h=818\" src=\"https://static.segmentfault.com/v-5b3afb96/global/img/squares.svg\" alt=\"\" title=\"\" style=\"cursor: pointer;\"></span></p>\n<p>很不错，<code>_data</code>也有<code>proxy</code>了，很王祖蓝式的完美。</p>\n<p>看到我们的html的界面，都是没有数据的，上面我们把数据都准备好了，下面我们就开始把数据结合到html的界面上。</p>\n<h3 id=\"articleHeader4\">套数据，实现hmtl界面</h3>\n<p>先把计算属性这个html注释掉，后面进行实现</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"<!-- <p>计算属性：{{sum}}</p> -->\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs django\"><code style=\"word-break: break-word; white-space: initial;\"><span class=\"xml\"><span class=\"hljs-comment\">&lt;!-- &lt;p&gt;计算属性：</span></span><span class=\"hljs-template-variable\">{{sum}}</span><span class=\"xml\"><span class=\"hljs-comment\">&lt;/p&gt; --&gt;</span></span></code></pre>\n<p>然后在Mvvm函数中增加一个编译函数，➕号表示是添加的函数</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function Mvvm(options = {}) {\n    this.$options = options\n    let data = this._data = this.$options.data\n    let vm = initVm.call(this)\n+   new Compile(this.$options.el, vm) // 添加一个编译函数\n    return this._vm\n}\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs kotlin\"><code>function Mvvm(options = {}) {\n    <span class=\"hljs-keyword\">this</span>.$options = options\n    let <span class=\"hljs-keyword\">data</span> = <span class=\"hljs-keyword\">this</span>._data = <span class=\"hljs-keyword\">this</span>.$options.<span class=\"hljs-keyword\">data</span>\n    let vm = initVm.call(<span class=\"hljs-keyword\">this</span>)\n+   new Compile(<span class=\"hljs-keyword\">this</span>.$options.el, vm) <span class=\"hljs-comment\">// 添加一个编译函数</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>._vm\n}</code></pre>\n<p>上面我们添加了一个<code>Compile</code>的构造函数。把配置的<code>el</code>作为参数传机进来，把生成<code>proxy</code>的实例<code>vm</code>也传进去，这样子我们就可以拿到<code>vm</code>下面的数据，下面我们就去实现它。顺序读注释就可以了，很好理解</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"// 编译类\nclass Compile {\n    constructor (el, vm) {\n        this.vm = vm // 把传进来的vm 存起来，因为这个vm.a = 1 没毛病\n        let element = document.querySelector(el) // 拿到 app 节点\n        let fragment = document.createDocumentFragment() // 创建fragment代码片段\n        fragment.append(element) // 把app节点 添加到 创建fragment代码片段中\n        this.replace(fragment) // 套数据函数\n        document.body.appendChild(fragment) // 最后添加到body中\n    }\n    replace(frag) {\n        let vm = this.vm // 拿到之前存起来的vm\n        // 循环frag.childNodes\n        Array.from(frag.childNodes).forEach(node => {\n            let txt = node.textContent // 拿到文本 例如：&quot;开发语言：{{language}}&quot;\n            let reg = /\\{\\{(.*?)\\}\\}/g // 定义匹配正则\n            if (node.nodeType === 3 &amp;&amp; reg.test(txt)) {\n            \n                replaceTxt()\n                \n                function replaceTxt() {\n                    // 如果匹配到的话，就替换文本\n                    node.textContent = txt.replace(reg, (matched, placeholder) => {\n                        return placeholder.split('.').reduce((obj, key) => {\n                            return obj[key] // 例如：去vm.makeUp.one对象拿到值\n                        }, vm)\n                    })\n                }\n            }\n            // 如果还有字节点，并且长度不为0 \n            if (node.childNodes &amp;&amp; node.childNodes.length) {\n                // 直接递归匹配替换\n                this.replace(node)\n            }\n        })\n    }\n}\n\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs typescript\"><code><span class=\"hljs-comment\">// 编译类</span>\n<span class=\"hljs-keyword\">class</span> Compile {\n    <span class=\"hljs-keyword\">constructor</span> (<span class=\"hljs-params\">el, vm</span>) {\n        <span class=\"hljs-keyword\">this</span>.vm = vm <span class=\"hljs-comment\">// 把传进来的vm 存起来，因为这个vm.a = 1 没毛病</span>\n        <span class=\"hljs-keyword\">let</span> element = <span class=\"hljs-built_in\">document</span>.querySelector(el) <span class=\"hljs-comment\">// 拿到 app 节点</span>\n        <span class=\"hljs-keyword\">let</span> fragment = <span class=\"hljs-built_in\">document</span>.createDocumentFragment() <span class=\"hljs-comment\">// 创建fragment代码片段</span>\n        fragment.append(element) <span class=\"hljs-comment\">// 把app节点 添加到 创建fragment代码片段中</span>\n        <span class=\"hljs-keyword\">this</span>.replace(fragment) <span class=\"hljs-comment\">// 套数据函数</span>\n        <span class=\"hljs-built_in\">document</span>.body.appendChild(fragment) <span class=\"hljs-comment\">// 最后添加到body中</span>\n    }\n    replace(frag) {\n        <span class=\"hljs-keyword\">let</span> vm = <span class=\"hljs-keyword\">this</span>.vm <span class=\"hljs-comment\">// 拿到之前存起来的vm</span>\n        <span class=\"hljs-comment\">// 循环frag.childNodes</span>\n        <span class=\"hljs-built_in\">Array</span>.from(frag.childNodes).forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">node</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">let</span> txt = node.textContent <span class=\"hljs-comment\">// 拿到文本 例如：\"开发语言：{{language}}\"</span>\n            <span class=\"hljs-keyword\">let</span> reg = <span class=\"hljs-regexp\">/\\{\\{(.*?)\\}\\}/g</span> <span class=\"hljs-comment\">// 定义匹配正则</span>\n            <span class=\"hljs-keyword\">if</span> (node.nodeType === <span class=\"hljs-number\">3</span> &amp;&amp; reg.test(txt)) {\n            \n                replaceTxt()\n                \n                <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">replaceTxt</span>(<span class=\"hljs-params\"></span>) </span>{\n                    <span class=\"hljs-comment\">// 如果匹配到的话，就替换文本</span>\n                    node.textContent = txt.replace(reg, <span class=\"hljs-function\">(<span class=\"hljs-params\">matched, placeholder</span>) =&gt;</span> {\n                        <span class=\"hljs-keyword\">return</span> placeholder.split(<span class=\"hljs-string\">'.'</span>).reduce(<span class=\"hljs-function\">(<span class=\"hljs-params\">obj, key</span>) =&gt;</span> {\n                            <span class=\"hljs-keyword\">return</span> obj[key] <span class=\"hljs-comment\">// 例如：去vm.makeUp.one对象拿到值</span>\n                        }, vm)\n                    })\n                }\n            }\n            <span class=\"hljs-comment\">// 如果还有字节点，并且长度不为0 </span>\n            <span class=\"hljs-keyword\">if</span> (node.childNodes &amp;&amp; node.childNodes.length) {\n                <span class=\"hljs-comment\">// 直接递归匹配替换</span>\n                <span class=\"hljs-keyword\">this</span>.replace(node)\n            }\n        })\n    }\n}\n</code></pre>\n<p>上面的编译函数，总之就是一句话，千方百计的把{{xxx}}的占位符通过正则替换成真实的数据。</p>\n<p>然后刷新浏览器，铛铛档铛铛档，就出现我们要的数据了。</p>\n<p><span class=\"img-wrap\"><img data-src=\"/img/remote/1460000015460486?w=594&amp;h=448\" src=\"https://static.segmentfault.com/v-5b3afb96/global/img/squares.svg\" alt=\"\" title=\"\" style=\"cursor: pointer;\"></span></p>\n<p>很好很好，但是我们现在的数据并不是改变了 就发生变化了。还需要订阅发布和watcher来配合，才能做好改变数据就发生变化了。下面我们先实现订阅发布。</p>\n<h3 id=\"articleHeader5\">实现订阅发布</h3>\n<p>订阅发布其实是一种常见的程序设计模式，简单直白来说就是:</p>\n<blockquote>把函数push到一个数组里面，然后循环数据调用函数。</blockquote>\n<p>例如：举个很直白的例子</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"let arr = [] \nlet a = () => {console.log('a')}\n\narr.push(a) // 订阅a函数\narr.push(a) // 又订阅a函数\narr.push(a) // 双订阅a函数\n\narr.forEach(fn => fn()) // 发布所有\n\n// 此时会打印三个a\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs gauss\"><code><span class=\"hljs-keyword\">let</span> arr = [] \n<span class=\"hljs-keyword\">let</span> a = () =&gt; {console.<span class=\"hljs-built_in\">log</span>('a')}\n\narr.<span class=\"hljs-keyword\">push</span>(a) <span class=\"hljs-comment\">// 订阅a函数</span>\narr.<span class=\"hljs-keyword\">push</span>(a) <span class=\"hljs-comment\">// 又订阅a函数</span>\narr.<span class=\"hljs-keyword\">push</span>(a) <span class=\"hljs-comment\">// 双订阅a函数</span>\n\narr.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">fn</span> =&gt; <span class=\"hljs-keyword\">fn</span><span class=\"hljs-params\">()</span>) <span class=\"hljs-comment\">// 发布所有</span>\n\n<span class=\"hljs-comment\">// 此时会打印三个a</span></span></code></pre>\n<p>很简单吧。下面我们去实现我们的代码</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"// 订阅类\nclass Dep {\n    constructor() {\n        this.subs = [] // 定义数组\n    }\n    // 订阅函数\n    addSub(sub) {\n        this.subs.push(sub)\n    }\n    // 发布函数\n    notify() {\n        this.subs.filter(item => typeof item !== 'string').forEach(sub => sub.update())\n    }\n}\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs javascript\"><code><span class=\"hljs-comment\">// 订阅类</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Dep</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>() {\n        <span class=\"hljs-keyword\">this</span>.subs = [] <span class=\"hljs-comment\">// 定义数组</span>\n    }\n    <span class=\"hljs-comment\">// 订阅函数</span>\n    addSub(sub) {\n        <span class=\"hljs-keyword\">this</span>.subs.push(sub)\n    }\n    <span class=\"hljs-comment\">// 发布函数</span>\n    notify() {\n        <span class=\"hljs-keyword\">this</span>.subs.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> <span class=\"hljs-keyword\">typeof</span> item !== <span class=\"hljs-string\">'string'</span>).forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">sub</span> =&gt;</span> sub.update())\n    }\n}</code></pre>\n<p>订阅发布是写好了，但是在什么时候订阅，什么时候发布？？这时候，我们是在数据获取的时候订阅<code>watcher</code>，然后在数据设置的时候发布<code>watcher</code>，在上面的<code>Observe</code>类里面里面,看➕号的代码。 .</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"... //省略代码\n...\nproxy(data) {\n    let dep = this.dep\n    return new Proxy(data, {\n        // 拦截get\n        get: (target, prop, receiver) => {\n+           if (Dep.target) {\n                // 如果之前是push过的，就不用重复push了\n                if (!dep.subs.includes(Dep.exp)) {\n                    dep.addSub(Dep.exp) // 把Dep.exp。push到sub数组里面，订阅\n                    dep.addSub(Dep.target) // 把Dep.target。push到sub数组里面，订阅\n                }\n+           }\n            return Reflect.get(target, prop, receiver)\n        },\n        // 拦截set\n        set: (target, prop, value) => {\n            const result = Reflect.set(target, prop, observe(value))\n+           dep.notify() // 发布\n            return result  \n        }\n    })\n}\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs javascript\"><code>... <span class=\"hljs-comment\">//省略代码</span>\n...\nproxy(data) {\n    <span class=\"hljs-keyword\">let</span> dep = <span class=\"hljs-keyword\">this</span>.dep\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Proxy</span>(data, {\n        <span class=\"hljs-comment\">// 拦截get</span>\n        get: <span class=\"hljs-function\">(<span class=\"hljs-params\">target, prop, receiver</span>) =&gt;</span> {\n+           <span class=\"hljs-keyword\">if</span> (Dep.target) {\n                <span class=\"hljs-comment\">// 如果之前是push过的，就不用重复push了</span>\n                <span class=\"hljs-keyword\">if</span> (!dep.subs.includes(Dep.exp)) {\n                    dep.addSub(Dep.exp) <span class=\"hljs-comment\">// 把Dep.exp。push到sub数组里面，订阅</span>\n                    dep.addSub(Dep.target) <span class=\"hljs-comment\">// 把Dep.target。push到sub数组里面，订阅</span>\n                }\n+           }\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Reflect</span>.get(target, prop, receiver)\n        },\n        <span class=\"hljs-comment\">// 拦截set</span>\n        set: <span class=\"hljs-function\">(<span class=\"hljs-params\">target, prop, value</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-built_in\">Reflect</span>.set(target, prop, observe(value))\n+           dep.notify() <span class=\"hljs-comment\">// 发布</span>\n            <span class=\"hljs-keyword\">return</span> result  \n        }\n    })\n}</code></pre>\n<p>上面代码说到，watcher是什么鬼？然后发布里面的sub.update()又是什么鬼？？</p>\n<p>带着一堆疑问我们来到了watcher</p>\n<h3 id=\"articleHeader6\">实现watcher</h3>\n<p>看详细注释</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"// Watcher类\nclass Watcher {\n    constructor (vm, exp, fn) {\n        this.fn = fn // 传进来的fn\n        this.vm = vm // 传进来的vm\n        this.exp = exp // 传进来的匹配到exp 例如：&quot;language&quot;，&quot;makeUp.one&quot;\n        Dep.exp = exp // 给Dep类挂载一个exp\n        Dep.target = this // 给Dep类挂载一个watcher对象，跟新的时候就用到了\n        let arr = exp.split('.')\n        let val = vm\n        arr.forEach(key => {\n            val = val[key] // 获取值，这时候会粗发vm.proxy的get()函数，get()里面就添加addSub订阅函数\n        })\n        Dep.target = null // 添加了订阅之后，把Dep.target清空\n    }\n    update() {\n        // 设置值会触发vm.proxy.set函数，然后调用发布的notify，\n        // 最后调用update，update里面继续调用this.fn(val)\n        let exp = this.exp\n        let arr = exp.split('.')\n        let val = this.vm\n        arr.forEach(key => {\n            val = val[key]\n        })\n        this.fn(val)\n    }\n}\n\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs kotlin\"><code><span class=\"hljs-comment\">// Watcher类</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Watcher</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span> (vm, exp, fn) {\n        <span class=\"hljs-keyword\">this</span>.fn = fn <span class=\"hljs-comment\">// 传进来的fn</span>\n        <span class=\"hljs-keyword\">this</span>.vm = vm <span class=\"hljs-comment\">// 传进来的vm</span>\n        <span class=\"hljs-keyword\">this</span>.exp = exp <span class=\"hljs-comment\">// 传进来的匹配到exp 例如：\"language\"，\"makeUp.one\"</span>\n        Dep.exp = exp <span class=\"hljs-comment\">// 给Dep类挂载一个exp</span>\n        Dep.target = <span class=\"hljs-keyword\">this</span> <span class=\"hljs-comment\">// 给Dep类挂载一个watcher对象，跟新的时候就用到了</span>\n        let arr = exp.split(<span class=\"hljs-string\">'.'</span>)\n        let <span class=\"hljs-keyword\">val</span> = vm\n        arr.forEach(key =&gt; {\n            <span class=\"hljs-keyword\">val</span> = <span class=\"hljs-keyword\">val</span>[key] <span class=\"hljs-comment\">// 获取值，这时候会粗发vm.proxy的get()函数，get()里面就添加addSub订阅函数</span>\n        })\n        Dep.target = <span class=\"hljs-literal\">null</span> <span class=\"hljs-comment\">// 添加了订阅之后，把Dep.target清空</span>\n    }\n    update() {\n        <span class=\"hljs-comment\">// 设置值会触发vm.proxy.set函数，然后调用发布的notify，</span>\n        <span class=\"hljs-comment\">// 最后调用update，update里面继续调用this.fn(val)</span>\n        let exp = <span class=\"hljs-keyword\">this</span>.exp\n        let arr = exp.split(<span class=\"hljs-string\">'.'</span>)\n        let <span class=\"hljs-keyword\">val</span> = <span class=\"hljs-keyword\">this</span>.vm\n        arr.forEach(key =&gt; {\n            <span class=\"hljs-keyword\">val</span> = <span class=\"hljs-keyword\">val</span>[key]\n        })\n        <span class=\"hljs-keyword\">this</span>.fn(<span class=\"hljs-keyword\">val</span>)\n    }\n}\n</code></pre>\n<p>Watcher类就是我们要订阅的watcher，里面有回调函数fn，有update函数调用fn，</p>\n<p>我们都弄好了。但是在哪里添加watcher呢？？如下代码</p>\n<p>在Compile里面</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"...\n...\nfunction replaceTxt() {\n    node.textContent = txt.replace(reg, (matched, placeholder) => {\n+       new Watcher(vm, placeholder, replaceTxt);   // 监听变化，进行匹配替换内容\n        return placeholder.split('.').reduce((val, key) => {\n            return val[key]\n        }, vm)\n    })\n}\n\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs typescript\"><code>...\n...\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">replaceTxt</span>(<span class=\"hljs-params\"></span>) </span>{\n    node.textContent = txt.replace(reg, <span class=\"hljs-function\">(<span class=\"hljs-params\">matched, placeholder</span>) =&gt;</span> {\n+       <span class=\"hljs-keyword\">new</span> Watcher(vm, placeholder, replaceTxt);   <span class=\"hljs-comment\">// 监听变化，进行匹配替换内容</span>\n        <span class=\"hljs-keyword\">return</span> placeholder.split(<span class=\"hljs-string\">'.'</span>).reduce(<span class=\"hljs-function\">(<span class=\"hljs-params\">val, key</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">return</span> val[key]\n        }, vm)\n    })\n}\n</code></pre>\n<p>添加好有所的东西了，我们看一下控制台。修改发现果然起作用了。</p>\n<p><span class=\"img-wrap\"><img data-src=\"/img/remote/1460000015460487?w=1490&amp;h=962\" src=\"https://static.segmentfault.com/v-5b3afb96/global/img/squares.svg\" alt=\"\" title=\"\" style=\"cursor: pointer;\"></span></p>\n<p>然后我们回顾一下所有的流程，然后看见古老(我也是别的地方弄来的)的一张图。</p>\n<p>帮助理解嘛</p>\n<p><span class=\"img-wrap\"><img data-src=\"/img/remote/1460000015460488\" src=\"https://static.segmentfault.com/v-5b3afb96/global/img/squares.svg\" alt=\"\" title=\"\" style=\"cursor: pointer;\"></span></p>\n<p>响应式的数据我们都已经完成了，下面我们完成一下双向绑定。</p>\n<h3 id=\"articleHeader7\">实现双向绑定</h3>\n<p>看到我们html里面有个<code>&lt;input placeholder=\"123\" v-module=\"language\" /&gt;</code>，<code>v-module</code>绑定了一个<code>language</code>，然后在<code>Compile类</code>里面的<code>replace函数</code>，我们加上</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"replace(frag) {\n    let vm = this.vm\n    Array.from(frag.childNodes).forEach(node => {\n        let txt = node.textContent\n        let reg = /\\{\\{(.*?)\\}\\}/g\n        // 判断nodeType\n+       if (node.nodeType === 1) {\n            const nodeAttr = node.attributes // 属性集合\n            Array.from(nodeAttr).forEach(item => {\n                let name = item.name // 属性名\n                let exp = item.value // 属性值\n                // 如果属性有 v-\n                if (name.includes('v-')){\n                    node.value = vm[exp]\n                    node.addEventListener('input', e => {\n                        // 相当于给this.language赋了一个新值\n                        // 而值的改变会调用set，set中又会调用notify，notify中调用watcher的update方法实现了更新操作\n                        vm[exp] = e.target.value\n                    })\n                }\n            });\n+       }\n        ...\n        ...\n    }\n  }\n\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs typescript\"><code>replace(frag) {\n    <span class=\"hljs-keyword\">let</span> vm = <span class=\"hljs-keyword\">this</span>.vm\n    <span class=\"hljs-built_in\">Array</span>.from(frag.childNodes).forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">node</span> =&gt;</span> {\n        <span class=\"hljs-keyword\">let</span> txt = node.textContent\n        <span class=\"hljs-keyword\">let</span> reg = <span class=\"hljs-regexp\">/\\{\\{(.*?)\\}\\}/g</span>\n        <span class=\"hljs-comment\">// 判断nodeType</span>\n+       <span class=\"hljs-keyword\">if</span> (node.nodeType === <span class=\"hljs-number\">1</span>) {\n            <span class=\"hljs-keyword\">const</span> nodeAttr = node.attributes <span class=\"hljs-comment\">// 属性集合</span>\n            <span class=\"hljs-built_in\">Array</span>.from(nodeAttr).forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n                <span class=\"hljs-keyword\">let</span> name = item.name <span class=\"hljs-comment\">// 属性名</span>\n                <span class=\"hljs-keyword\">let</span> exp = item.value <span class=\"hljs-comment\">// 属性值</span>\n                <span class=\"hljs-comment\">// 如果属性有 v-</span>\n                <span class=\"hljs-keyword\">if</span> (name.includes(<span class=\"hljs-string\">'v-'</span>)){\n                    node.value = vm[exp]\n                    node.addEventListener(<span class=\"hljs-string\">'input'</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> {\n                        <span class=\"hljs-comment\">// 相当于给this.language赋了一个新值</span>\n                        <span class=\"hljs-comment\">// 而值的改变会调用set，set中又会调用notify，notify中调用watcher的update方法实现了更新操作</span>\n                        vm[exp] = e.target.value\n                    })\n                }\n            });\n+       }\n        ...\n        ...\n    }\n  }\n</code></pre>\n<p>上面的方法就是，让我们的<code>input</code>节点绑定一个<code>input事件</code>，然后当<code>input事件</code>触发的时候，改变我们的值，而值的改变会调用<code>set</code>，<code>set</code>中又会调用<code>notify</code>，<code>notify</code>中调用<code>watcher</code>的<code>update</code>方法实现了更新操作。</p>\n<p>然后我们看一下，界面<br><span class=\"img-wrap\"><img data-src=\"/img/remote/1460000015460489?w=1304&amp;h=972\" src=\"https://static.segmentfault.com/v-5b3afb96/global/img/squares.svg\" alt=\"\" title=\"\" style=\"cursor: pointer;\"></span></p>\n<p>双向数据绑定我们基本完成了，别忘了，我们上面还有个注释掉的计算属性。</p>\n<h3 id=\"articleHeader8\">计算属性</h3>\n<p>先把<code>&lt;p&gt;计算属性：{{sum}}&lt;/p&gt;</code>注释去掉，以为上面一开始initVm函数里面，我们加了这个代码<code>return this[key] || this._data[key] || this._computed[key]</code>，到这里大家都明白了，只需要把this._computed也加一个watcher就好了。</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function Mvvm(options = {}) {\n    this.$options = options\n    let data = this._data = this.$options.data\n    let vm = initVm.call(this)\n    initObserve.call(this, data)\n+   initComputed.call(this) // 添加计算函数，改变this指向\n    new Compile(this.$options.el, vm)\n    return this._vm\n}\n\n\nfunction initComputed() {\n    let vm = this\n    let computed = this.$options.computed // 拿到配置的computed\n    vm._computed = {}\n    if (!computed) return // 没有计算直接返回\n    Object.keys(computed).forEach(key => {\n        // 相当于把sum里的this指向到this._vm，然后就可以拿到this.a、this、b\n        this._computed[key] = computed[key].call(this._vm)\n        // 添加新的Watcher\n        new Watcher(this._vm, key, val => {\n            // 每次设置的时候都会计算\n            this._computed[key] = computed[key].call(this._vm)\n        })\n    })\n}\n\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs kotlin\"><code>function Mvvm(options = {}) {\n    <span class=\"hljs-keyword\">this</span>.$options = options\n    let <span class=\"hljs-keyword\">data</span> = <span class=\"hljs-keyword\">this</span>._data = <span class=\"hljs-keyword\">this</span>.$options.<span class=\"hljs-keyword\">data</span>\n    let vm = initVm.call(<span class=\"hljs-keyword\">this</span>)\n    initObserve.call(<span class=\"hljs-keyword\">this</span>, <span class=\"hljs-keyword\">data</span>)\n+   initComputed.call(<span class=\"hljs-keyword\">this</span>) <span class=\"hljs-comment\">// 添加计算函数，改变this指向</span>\n    new Compile(<span class=\"hljs-keyword\">this</span>.$options.el, vm)\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>._vm\n}\n\n\nfunction initComputed() {\n    let vm = <span class=\"hljs-keyword\">this</span>\n    let computed = <span class=\"hljs-keyword\">this</span>.$options.computed <span class=\"hljs-comment\">// 拿到配置的computed</span>\n    vm._computed = {}\n    <span class=\"hljs-keyword\">if</span> (!computed) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-comment\">// 没有计算直接返回</span>\n    Object.keys(computed).forEach(key =&gt; {\n        <span class=\"hljs-comment\">// 相当于把sum里的this指向到this._vm，然后就可以拿到this.a、this、b</span>\n        <span class=\"hljs-keyword\">this</span>._computed[key] = computed[key].call(<span class=\"hljs-keyword\">this</span>._vm)\n        <span class=\"hljs-comment\">// 添加新的Watcher</span>\n        new Watcher(<span class=\"hljs-keyword\">this</span>._vm, key, <span class=\"hljs-keyword\">val</span> =&gt; {\n            <span class=\"hljs-comment\">// 每次设置的时候都会计算</span>\n            <span class=\"hljs-keyword\">this</span>._computed[key] = computed[key].call(<span class=\"hljs-keyword\">this</span>._vm)\n        })\n    })\n}\n</code></pre>\n<p>上面的initComputed 就是添加一个watcher，大致流程：</p>\n<p>this._vm改变 ---&gt; vm.set() ---&gt; notify() --&gt;update()--&gt;更新界面</p>\n<p>最后看看图片</p>\n<p><span class=\"img-wrap\"><img data-src=\"/img/remote/1460000015460490?w=1238&amp;h=974\" src=\"https://static.segmentfault.com/v-5b3afb96/global/img/squares.svg\" alt=\"\" title=\"\" style=\"cursor: pointer;\"></span></p>\n<p>一切似乎没什么毛病~~~~</p>\n<h3 id=\"articleHeader9\">添加mounted钩子</h3>\n<p>添加mounted也很简单</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"// 写法和Vue一样\nlet mvvm = new Mvvm({\n    el: '#app',\n    data: {\n        ...\n        ...\n    },\n    computed: {\n        ...\n        ...\n    },\n    mounted() {\n        console.log('i am mounted', this.a)\n    }\n})\n\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs lasso\"><code><span class=\"hljs-comment\">// 写法和Vue一样</span>\n<span class=\"hljs-keyword\">let</span> mvvm = <span class=\"hljs-literal\">new</span> Mvvm({\n    el: <span class=\"hljs-string\">'#app'</span>,\n    <span class=\"hljs-built_in\">data</span>: {\n        <span class=\"hljs-params\">...</span>\n        <span class=\"hljs-params\">...</span>\n    },\n    computed: {\n        <span class=\"hljs-params\">...</span>\n        <span class=\"hljs-params\">...</span>\n    },\n    mounted() {\n        console.<span class=\"hljs-keyword\">log</span>(<span class=\"hljs-string\">'i am mounted'</span>, this.a)\n    }\n})\n</code></pre>\n<p>在new Mvvm里面添加mounted，<br>然后到function Mvvm里面加上</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function Mvvm(options = {}) {\n    this.$options = options\n    let data = this._data = this.$options.data\n    let vm = initVm.call(this)\n    initObserve.call(this, data)\n    initComputed.call(this)\n    new Compile(this.$options.el, vm)\n+   mounted.call(this._vm) // 加上mounted，改变指向\n    return this._vm\n}\n\n// 运行mounted\n+ function mounted() {\n    let mounted = this.$options.mounted\n    mounted &amp;&amp; mounted.call(this)\n+ }\n\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs kotlin\"><code>function Mvvm(options = {}) {\n    <span class=\"hljs-keyword\">this</span>.$options = options\n    let <span class=\"hljs-keyword\">data</span> = <span class=\"hljs-keyword\">this</span>._data = <span class=\"hljs-keyword\">this</span>.$options.<span class=\"hljs-keyword\">data</span>\n    let vm = initVm.call(<span class=\"hljs-keyword\">this</span>)\n    initObserve.call(<span class=\"hljs-keyword\">this</span>, <span class=\"hljs-keyword\">data</span>)\n    initComputed.call(<span class=\"hljs-keyword\">this</span>)\n    new Compile(<span class=\"hljs-keyword\">this</span>.$options.el, vm)\n+   mounted.call(<span class=\"hljs-keyword\">this</span>._vm) <span class=\"hljs-comment\">// 加上mounted，改变指向</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>._vm\n}\n\n<span class=\"hljs-comment\">// 运行mounted</span>\n+ function mounted() {\n    let mounted = <span class=\"hljs-keyword\">this</span>.$options.mounted\n    mounted &amp;&amp; mounted.call(<span class=\"hljs-keyword\">this</span>)\n+ }\n</code></pre>\n<p>执行之后会打印出</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"i am mounted 1\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre class=\"hljs stylus\"><code style=\"word-break: break-word; white-space: initial;\"><span class=\"hljs-selector-tag\">i</span> am mounted <span class=\"hljs-number\">1</span></code></pre>\n<p>完结~~~~撒花</p>\n<p>ps：编译里面的，参考到这个大神的操作。@<a href=\"https://juejin.im/post/5abdd6f6f265da23793c4458\" rel=\"nofollow noreferrer\" target=\"_blank\">chenhongdong</a>，谢谢大佬</p>\n<p>最后附上，源代码地址，直接下载运行就可以啦。</p>\n<p>源码地址：<a href=\"https://github.com/naihe138/proxy-mvvm\" rel=\"nofollow noreferrer\" target=\"_blank\">https://github.com/naihe138/proxy-mvvm</a></p>\n<p>预览地址：<a href=\"http://gitblog.naice.me/proxy-mvvm/index.html\" rel=\"nofollow noreferrer\" target=\"_blank\">http://gitblog.naice.me/proxy-mvvm/index.html</a></p>\n\n                </div>","time":"2018/07/03 14:01:03","__v":0},{"_id":"5b3b0aeb68359b1e2028a2f1","name":"志如 ","img":"https://sfault-avatar.b0.upaiyun.com/225/907/2259071745-5b16035153312_huge256","title":"Javascript常见排序算法的笔记","content":"<h2><a href='https://segmentfault.com/a/1190000015347051#articleHeader0'>原文地址</a></h2><div class=\"col-xs-12 col-md-9 main \">\n                                <div class=\"post-topheader custom- pt0\">\n                    <div class=\"mb20\">\n                        <div class=\"block-for-right-border\">\n                            <div class=\"row\">\n                                <div class=\"col-md-12article__author col-sm-12 col-xs-12\">\n                                \n\n                                    <div class=\"post-topheader__info\" data-username=\"志如\" data-userslug=\"zhiru\">\n\n                                        \n\n                                        <h1 class=\"h1 post-topheader__info--title\" id=\"articleTitle\" data-id=\"1190000015347051\">\n                                            <a href=\"#\"> Javascript常见排序算法的笔记</a>\n                                        </h1>\n\n                                        <div class=\"content__tech blog-type-common blog-type-1-before hidden-xs\">\n                                            \n\n                                                                                                                                </div>\n\n                                                                                <form class=\"form form__tech hidden\" data-action=\"#\">\n                                            <span class=\"pull-right\">\n                                                <button class=\"btn btn-default save-tags-btn\" type=\"button\">保存</button>\n                                            </span>\n                                            <div class=\"form-group\" style=\"margin-right: 65px\">\n                                                <label for=\"tags\" class=\"sr-only\">标签：至少1个，最多5个</label>\n                                                <input class=\"tagsInput form-control hidden\" data-init=\"[{&quot;name&quot;:&quot;\\u5feb\\u901f\\u6392\\u5e8f&quot;,&quot;url&quot;:&quot;\\/t\\/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F&quot;,&quot;id&quot;:&quot;1040000002433044&quot;,&quot;thumbnailUrl&quot;:&quot;&quot;,&quot;contentCount&quot;:25,&quot;iconUrl&quot;:&quot;&quot;},{&quot;name&quot;:&quot;\\u63d2\\u5165\\u6392\\u5e8f&quot;,&quot;url&quot;:&quot;\\/t\\/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F&quot;,&quot;id&quot;:&quot;1040000000494323&quot;,&quot;thumbnailUrl&quot;:&quot;&quot;,&quot;contentCount&quot;:11,&quot;iconUrl&quot;:&quot;&quot;},{&quot;name&quot;:&quot;\\u5192\\u6ce1\\u6392\\u5e8f&quot;,&quot;url&quot;:&quot;\\/t\\/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F&quot;,&quot;id&quot;:&quot;1040000000471259&quot;,&quot;thumbnailUrl&quot;:&quot;&quot;,&quot;contentCount&quot;:18,&quot;iconUrl&quot;:&quot;&quot;},{&quot;name&quot;:&quot;\\u7b97\\u6cd5&quot;,&quot;url&quot;:&quot;\\/t\\/%E7%AE%97%E6%B3%95&quot;,&quot;id&quot;:&quot;1040000000089524&quot;,&quot;thumbnailUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/307\\/849\\/3078499334-1040000000089524_big64&quot;,&quot;contentCount&quot;:2787,&quot;iconUrl&quot;:&quot;&quot;},{&quot;name&quot;:&quot;javascript&quot;,&quot;url&quot;:&quot;\\/t\\/javascript&quot;,&quot;id&quot;:&quot;1040000000089436&quot;,&quot;thumbnailUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/195\\/823\\/1958237468-1040000000089436_big64&quot;,&quot;contentCount&quot;:96271,&quot;iconUrl&quot;:&quot;&quot;}]\" name=\"tags\" type=\"text\" placeholder=\"标签，如：php 可使用逗号,分号;分隔\" data-role=\"tagsinput\"><div class=\"sf-typeHelper sf-typeHelper--fortags\"><span class=\"sf-typeHelper-item  \">快速排序<span data-role=\"remove\">×</span></span><span class=\"sf-typeHelper-item  \">插入排序<span data-role=\"remove\">×</span></span><span class=\"sf-typeHelper-item  \">冒泡排序<span data-role=\"remove\">×</span></span><span class=\"sf-typeHelper-item  \">算法<span data-role=\"remove\">×</span></span><span class=\"sf-typeHelper-item  \">javascript<span data-role=\"remove\">×</span></span><input type=\"text\" data-role=\"sf_typeHelper-input\" class=\"sf-typeHelper-input\" placeholder=\"标签，如：php 可使用逗号,分号;分隔\" style=\"width: 20em;\"><ul class=\"sf-typeHelper-list dropdown-menu\" style=\"display: none;\"></ul></div>\n                                                <div role=\"tabpanel\" class=\"techTags panel panel-default techTags-panel\" data-tech=\"{&quot;\\u5f00\\u53d1\\u8bed\\u8a00&quot;:[{&quot;id&quot;:&quot;1040000000089436&quot;,&quot;name&quot;:&quot;javascript&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089387&quot;,&quot;name&quot;:&quot;php&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089434&quot;,&quot;name&quot;:&quot;css&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089571&quot;,&quot;name&quot;:&quot;html&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089449&quot;,&quot;name&quot;:&quot;java&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/868\\/271\\/868271510-54cb382abb7a1_small&quot;},{&quot;id&quot;:&quot;1040000000089409&quot;,&quot;name&quot;:&quot;html5&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/102\\/500\\/1025005915-54cb538538eea_small&quot;},{&quot;id&quot;:&quot;1040000000089534&quot;,&quot;name&quot;:&quot;python&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/252\\/177\\/2521771040-54cb53b372821_small&quot;},{&quot;id&quot;:&quot;1040000000089918&quot;,&quot;name&quot;:&quot;node.js&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089741&quot;,&quot;name&quot;:&quot;c++&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089457&quot;,&quot;name&quot;:&quot;c&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090209&quot;,&quot;name&quot;:&quot;objective-c&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090203&quot;,&quot;name&quot;:&quot;golang&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089669&quot;,&quot;name&quot;:&quot;shell&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000531223&quot;,&quot;name&quot;:&quot;swift&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089581&quot;,&quot;name&quot;:&quot;c#&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000365394&quot;,&quot;name&quot;:&quot;typescript&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089699&quot;,&quot;name&quot;:&quot;ruby&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/336\\/760\\/3367608758-54cb53ca5a132_small&quot;},{&quot;id&quot;:&quot;1040000000089686&quot;,&quot;name&quot;:&quot;bash&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000091262&quot;,&quot;name&quot;:&quot;sass&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090433&quot;,&quot;name&quot;:&quot;asp.net&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090600&quot;,&quot;name&quot;:&quot;less&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090208&quot;,&quot;name&quot;:&quot;lua&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090228&quot;,&quot;name&quot;:&quot;scala&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000161068&quot;,&quot;name&quot;:&quot;coffeescript&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090194&quot;,&quot;name&quot;:&quot;actionscript&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090201&quot;,&quot;name&quot;:&quot;erlang&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089698&quot;,&quot;name&quot;:&quot;perl&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000311191&quot;,&quot;name&quot;:&quot;rust&quot;,&quot;iconUrl&quot;:&quot;&quot;}],&quot;\\u5e73\\u53f0\\u6846\\u67b6&quot;:[{&quot;id&quot;:&quot;1040000000196640&quot;,&quot;name&quot;:&quot;laravel&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090103&quot;,&quot;name&quot;:&quot;spring&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089564&quot;,&quot;name&quot;:&quot;django&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000166256&quot;,&quot;name&quot;:&quot;express&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000125263&quot;,&quot;name&quot;:&quot;flask&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090398&quot;,&quot;name&quot;:&quot;yii&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089646&quot;,&quot;name&quot;:&quot;ruby-on-rails&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000116331&quot;,&quot;name&quot;:&quot;tornado&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089638&quot;,&quot;name&quot;:&quot;struts&quot;,&quot;iconUrl&quot;:&quot;&quot;}],&quot;\\u670d\\u52a1\\u5668&quot;:[{&quot;id&quot;:&quot;1040000000089392&quot;,&quot;name&quot;:&quot;linux&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090145&quot;,&quot;name&quot;:&quot;nginx&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089761&quot;,&quot;name&quot;:&quot;apache&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000366352&quot;,&quot;name&quot;:&quot;docker&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090245&quot;,&quot;name&quot;:&quot;ubuntu&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/335\\/109\\/3351090335-569f0f26a2a86_small&quot;},{&quot;id&quot;:&quot;1040000000090249&quot;,&quot;name&quot;:&quot;centos&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090117&quot;,&quot;name&quot;:&quot;tomcat&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090401&quot;,&quot;name&quot;:&quot;\\u7f13\\u5b58&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090107&quot;,&quot;name&quot;:&quot;\\u8d1f\\u8f7d\\u5747\\u8861&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090646&quot;,&quot;name&quot;:&quot;unix&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089648&quot;,&quot;name&quot;:&quot;hadoop&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090609&quot;,&quot;name&quot;:&quot;windows-server&quot;,&quot;iconUrl&quot;:&quot;&quot;}],&quot;\\u6570\\u636e\\u5e93\\u548c\\u7f13\\u5b58&quot;:[{&quot;id&quot;:&quot;1040000000089439&quot;,&quot;name&quot;:&quot;mysql&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/949\\/844\\/9498447-54cb56e325a72_small&quot;},{&quot;id&quot;:&quot;1040000000089431&quot;,&quot;name&quot;:&quot;redis&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090049&quot;,&quot;name&quot;:&quot;sql&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089488&quot;,&quot;name&quot;:&quot;mongodb&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/183\\/816\\/1838168166-54cb5552ef5de_small&quot;},{&quot;id&quot;:&quot;1040000000090701&quot;,&quot;name&quot;:&quot;oracle&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089432&quot;,&quot;name&quot;:&quot;nosql&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089873&quot;,&quot;name&quot;:&quot;memcached&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090424&quot;,&quot;name&quot;:&quot;sqlserver&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090354&quot;,&quot;name&quot;:&quot;sqlite&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090861&quot;,&quot;name&quot;:&quot;postgresql&quot;,&quot;iconUrl&quot;:&quot;&quot;}],&quot;\\u5f00\\u53d1\\u5de5\\u5177&quot;:[{&quot;id&quot;:&quot;1040000000089459&quot;,&quot;name&quot;:&quot;git&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000091226&quot;,&quot;name&quot;:&quot;github&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089467&quot;,&quot;name&quot;:&quot;vim&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000126097&quot;,&quot;name&quot;:&quot;sublime-text&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089579&quot;,&quot;name&quot;:&quot;xcode&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000002720957&quot;,&quot;name&quot;:&quot;visual-studio-code&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090560&quot;,&quot;name&quot;:&quot;intellij-idea&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089509&quot;,&quot;name&quot;:&quot;eclipse&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090186&quot;,&quot;name&quot;:&quot;maven&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089447&quot;,&quot;name&quot;:&quot;svn&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090473&quot;,&quot;name&quot;:&quot;ide&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090524&quot;,&quot;name&quot;:&quot;atom&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090231&quot;,&quot;name&quot;:&quot;visual-studio&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090216&quot;,&quot;name&quot;:&quot;emacs&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000183694&quot;,&quot;name&quot;:&quot;hg&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089663&quot;,&quot;name&quot;:&quot;textmate&quot;,&quot;iconUrl&quot;:&quot;&quot;}],&quot;\\u7cfb\\u7edf\\u8bbe\\u5907&quot;:[{&quot;id&quot;:&quot;1040000000089658&quot;,&quot;name&quot;:&quot;android&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/287\\/281\\/287281599-5a263edae47e9_small&quot;},{&quot;id&quot;:&quot;1040000000089442&quot;,&quot;name&quot;:&quot;ios&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/300\\/191\\/3001919899-5488009eb028c_small&quot;},{&quot;id&quot;:&quot;1040000000089407&quot;,&quot;name&quot;:&quot;chrome&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/281\\/209\\/2812096638-54cb55083b2cc_small&quot;},{&quot;id&quot;:&quot;1040000000089709&quot;,&quot;name&quot;:&quot;windows&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089498&quot;,&quot;name&quot;:&quot;iphone&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090217&quot;,&quot;name&quot;:&quot;firefox&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/334\\/705\\/334705769-54cb552688a94_small&quot;},{&quot;id&quot;:&quot;1040000000125504&quot;,&quot;name&quot;:&quot;internet-explorer&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000089499&quot;,&quot;name&quot;:&quot;safari&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090638&quot;,&quot;name&quot;:&quot;ipad&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090218&quot;,&quot;name&quot;:&quot;opera&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000002871462&quot;,&quot;name&quot;:&quot;apple-watch&quot;,&quot;iconUrl&quot;:&quot;&quot;}],&quot;\\u5176\\u5b83&quot;:[{&quot;id&quot;:&quot;1040000000089409&quot;,&quot;name&quot;:&quot;html5&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/102\\/500\\/1025005915-54cb538538eea_small&quot;},{&quot;id&quot;:&quot;1040000002893277&quot;,&quot;name&quot;:&quot;react.js&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090137&quot;,&quot;name&quot;:&quot;\\u641c\\u7d22\\u5f15\\u64ce&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000123810&quot;,&quot;name&quot;:&quot;virtualenv&quot;,&quot;iconUrl&quot;:&quot;&quot;},{&quot;id&quot;:&quot;1040000000090316&quot;,&quot;name&quot;:&quot;lucene&quot;,&quot;iconUrl&quot;:&quot;&quot;}]}\" style=\"display: none;\">\n    <ul class=\"nav nav-tabs\" role=\"tablist\">\n                    <li role=\"presentation\" class=\"active\"><a href=\"#开发语言\" aria-controls=\"type\" role=\"tab\" data-toggle=\"tab\">开发语言</a>\n            </li>\n                    <li role=\"presentation\" class=\"\"><a href=\"#平台框架\" aria-controls=\"type\" role=\"tab\" data-toggle=\"tab\">平台框架</a>\n            </li>\n                    <li role=\"presentation\" class=\"\"><a href=\"#服务器\" aria-controls=\"type\" role=\"tab\" data-toggle=\"tab\">服务器</a>\n            </li>\n                    <li role=\"presentation\" class=\"\"><a href=\"#数据库和缓存\" aria-controls=\"type\" role=\"tab\" data-toggle=\"tab\">数据库和缓存</a>\n            </li>\n                    <li role=\"presentation\" class=\"\"><a href=\"#开发工具\" aria-controls=\"type\" role=\"tab\" data-toggle=\"tab\">开发工具</a>\n            </li>\n                    <li role=\"presentation\" class=\"\"><a href=\"#系统设备\" aria-controls=\"type\" role=\"tab\" data-toggle=\"tab\">系统设备</a>\n            </li>\n                    <li role=\"presentation\" class=\"\"><a href=\"#其它\" aria-controls=\"type\" role=\"tab\" data-toggle=\"tab\">其它</a>\n            </li>\n            </ul>\n    <div class=\"tab-content\">\n                    <div role=\"tabpanel\" class=\"tab-pane active\" id=\"开发语言\">\n                <ul class=\"taglist--inline\">\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089436&quot;,&quot;name&quot;:&quot;javascript&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                javascript\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089387&quot;,&quot;name&quot;:&quot;php&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                php\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089434&quot;,&quot;name&quot;:&quot;css&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                css\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089571&quot;,&quot;name&quot;:&quot;html&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                html\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089449&quot;,&quot;name&quot;:&quot;java&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/868\\/271\\/868271510-54cb382abb7a1_small&quot;}\" href=\"javascript: void(0);\">\n                                                                    <img src=\"https://sfault-avatar.b0.upaiyun.com/868/271/868271510-54cb382abb7a1_small\">\n                                                                java\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089409&quot;,&quot;name&quot;:&quot;html5&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/102\\/500\\/1025005915-54cb538538eea_small&quot;}\" href=\"javascript: void(0);\">\n                                                                    <img src=\"https://sfault-avatar.b0.upaiyun.com/102/500/1025005915-54cb538538eea_small\">\n                                                                html5\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089534&quot;,&quot;name&quot;:&quot;python&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/252\\/177\\/2521771040-54cb53b372821_small&quot;}\" href=\"javascript: void(0);\">\n                                                                    <img src=\"https://sfault-avatar.b0.upaiyun.com/252/177/2521771040-54cb53b372821_small\">\n                                                                python\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089918&quot;,&quot;name&quot;:&quot;node.js&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                node.js\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089741&quot;,&quot;name&quot;:&quot;c++&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                c++\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089457&quot;,&quot;name&quot;:&quot;c&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                c\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090209&quot;,&quot;name&quot;:&quot;objective-c&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                objective-c\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090203&quot;,&quot;name&quot;:&quot;golang&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                golang\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089669&quot;,&quot;name&quot;:&quot;shell&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                shell\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000531223&quot;,&quot;name&quot;:&quot;swift&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                swift\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089581&quot;,&quot;name&quot;:&quot;c#&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                c#\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000365394&quot;,&quot;name&quot;:&quot;typescript&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                typescript\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089699&quot;,&quot;name&quot;:&quot;ruby&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/336\\/760\\/3367608758-54cb53ca5a132_small&quot;}\" href=\"javascript: void(0);\">\n                                                                    <img src=\"https://sfault-avatar.b0.upaiyun.com/336/760/3367608758-54cb53ca5a132_small\">\n                                                                ruby\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089686&quot;,&quot;name&quot;:&quot;bash&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                bash\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000091262&quot;,&quot;name&quot;:&quot;sass&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                sass\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090433&quot;,&quot;name&quot;:&quot;asp.net&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                asp.net\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090600&quot;,&quot;name&quot;:&quot;less&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                less\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090208&quot;,&quot;name&quot;:&quot;lua&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                lua\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090228&quot;,&quot;name&quot;:&quot;scala&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                scala\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000161068&quot;,&quot;name&quot;:&quot;coffeescript&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                coffeescript\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090194&quot;,&quot;name&quot;:&quot;actionscript&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                actionscript\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090201&quot;,&quot;name&quot;:&quot;erlang&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                erlang\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089698&quot;,&quot;name&quot;:&quot;perl&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                perl\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000311191&quot;,&quot;name&quot;:&quot;rust&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                rust\n                            </a>\n                        </li>\n                                    </ul>\n            </div>\n                    <div role=\"tabpanel\" class=\"tab-pane \" id=\"平台框架\">\n                <ul class=\"taglist--inline\">\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000196640&quot;,&quot;name&quot;:&quot;laravel&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                laravel\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090103&quot;,&quot;name&quot;:&quot;spring&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                spring\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089564&quot;,&quot;name&quot;:&quot;django&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                django\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000166256&quot;,&quot;name&quot;:&quot;express&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                express\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000125263&quot;,&quot;name&quot;:&quot;flask&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                flask\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090398&quot;,&quot;name&quot;:&quot;yii&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                yii\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089646&quot;,&quot;name&quot;:&quot;ruby-on-rails&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                ruby-on-rails\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000116331&quot;,&quot;name&quot;:&quot;tornado&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                tornado\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089638&quot;,&quot;name&quot;:&quot;struts&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                struts\n                            </a>\n                        </li>\n                                    </ul>\n            </div>\n                    <div role=\"tabpanel\" class=\"tab-pane \" id=\"服务器\">\n                <ul class=\"taglist--inline\">\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089392&quot;,&quot;name&quot;:&quot;linux&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                linux\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090145&quot;,&quot;name&quot;:&quot;nginx&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                nginx\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089761&quot;,&quot;name&quot;:&quot;apache&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                apache\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000366352&quot;,&quot;name&quot;:&quot;docker&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                docker\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090245&quot;,&quot;name&quot;:&quot;ubuntu&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/335\\/109\\/3351090335-569f0f26a2a86_small&quot;}\" href=\"javascript: void(0);\">\n                                                                    <img src=\"https://sfault-avatar.b0.upaiyun.com/335/109/3351090335-569f0f26a2a86_small\">\n                                                                ubuntu\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090249&quot;,&quot;name&quot;:&quot;centos&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                centos\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090117&quot;,&quot;name&quot;:&quot;tomcat&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                tomcat\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090401&quot;,&quot;name&quot;:&quot;\\u7f13\\u5b58&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                缓存\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090107&quot;,&quot;name&quot;:&quot;\\u8d1f\\u8f7d\\u5747\\u8861&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                负载均衡\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090646&quot;,&quot;name&quot;:&quot;unix&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                unix\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089648&quot;,&quot;name&quot;:&quot;hadoop&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                hadoop\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090609&quot;,&quot;name&quot;:&quot;windows-server&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                windows-server\n                            </a>\n                        </li>\n                                    </ul>\n            </div>\n                    <div role=\"tabpanel\" class=\"tab-pane \" id=\"数据库和缓存\">\n                <ul class=\"taglist--inline\">\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089439&quot;,&quot;name&quot;:&quot;mysql&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/949\\/844\\/9498447-54cb56e325a72_small&quot;}\" href=\"javascript: void(0);\">\n                                                                    <img src=\"https://sfault-avatar.b0.upaiyun.com/949/844/9498447-54cb56e325a72_small\">\n                                                                mysql\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089431&quot;,&quot;name&quot;:&quot;redis&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                redis\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090049&quot;,&quot;name&quot;:&quot;sql&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                sql\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089488&quot;,&quot;name&quot;:&quot;mongodb&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/183\\/816\\/1838168166-54cb5552ef5de_small&quot;}\" href=\"javascript: void(0);\">\n                                                                    <img src=\"https://sfault-avatar.b0.upaiyun.com/183/816/1838168166-54cb5552ef5de_small\">\n                                                                mongodb\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090701&quot;,&quot;name&quot;:&quot;oracle&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                oracle\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089432&quot;,&quot;name&quot;:&quot;nosql&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                nosql\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089873&quot;,&quot;name&quot;:&quot;memcached&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                memcached\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090424&quot;,&quot;name&quot;:&quot;sqlserver&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                sqlserver\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090354&quot;,&quot;name&quot;:&quot;sqlite&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                sqlite\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090861&quot;,&quot;name&quot;:&quot;postgresql&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                postgresql\n                            </a>\n                        </li>\n                                    </ul>\n            </div>\n                    <div role=\"tabpanel\" class=\"tab-pane \" id=\"开发工具\">\n                <ul class=\"taglist--inline\">\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089459&quot;,&quot;name&quot;:&quot;git&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                git\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000091226&quot;,&quot;name&quot;:&quot;github&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                github\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089467&quot;,&quot;name&quot;:&quot;vim&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                vim\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000126097&quot;,&quot;name&quot;:&quot;sublime-text&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                sublime-text\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089579&quot;,&quot;name&quot;:&quot;xcode&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                xcode\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000002720957&quot;,&quot;name&quot;:&quot;visual-studio-code&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                visual-studio-code\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090560&quot;,&quot;name&quot;:&quot;intellij-idea&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                intellij-idea\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089509&quot;,&quot;name&quot;:&quot;eclipse&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                eclipse\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090186&quot;,&quot;name&quot;:&quot;maven&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                maven\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089447&quot;,&quot;name&quot;:&quot;svn&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                svn\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090473&quot;,&quot;name&quot;:&quot;ide&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                ide\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090524&quot;,&quot;name&quot;:&quot;atom&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                atom\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090231&quot;,&quot;name&quot;:&quot;visual-studio&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                visual-studio\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090216&quot;,&quot;name&quot;:&quot;emacs&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                emacs\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000183694&quot;,&quot;name&quot;:&quot;hg&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                hg\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089663&quot;,&quot;name&quot;:&quot;textmate&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                textmate\n                            </a>\n                        </li>\n                                    </ul>\n            </div>\n                    <div role=\"tabpanel\" class=\"tab-pane \" id=\"系统设备\">\n                <ul class=\"taglist--inline\">\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089658&quot;,&quot;name&quot;:&quot;android&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/287\\/281\\/287281599-5a263edae47e9_small&quot;}\" href=\"javascript: void(0);\">\n                                                                    <img src=\"https://sfault-avatar.b0.upaiyun.com/287/281/287281599-5a263edae47e9_small\">\n                                                                android\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089442&quot;,&quot;name&quot;:&quot;ios&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/300\\/191\\/3001919899-5488009eb028c_small&quot;}\" href=\"javascript: void(0);\">\n                                                                    <img src=\"https://sfault-avatar.b0.upaiyun.com/300/191/3001919899-5488009eb028c_small\">\n                                                                ios\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089407&quot;,&quot;name&quot;:&quot;chrome&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/281\\/209\\/2812096638-54cb55083b2cc_small&quot;}\" href=\"javascript: void(0);\">\n                                                                    <img src=\"https://sfault-avatar.b0.upaiyun.com/281/209/2812096638-54cb55083b2cc_small\">\n                                                                chrome\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089709&quot;,&quot;name&quot;:&quot;windows&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                windows\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089498&quot;,&quot;name&quot;:&quot;iphone&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                iphone\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090217&quot;,&quot;name&quot;:&quot;firefox&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/334\\/705\\/334705769-54cb552688a94_small&quot;}\" href=\"javascript: void(0);\">\n                                                                    <img src=\"https://sfault-avatar.b0.upaiyun.com/334/705/334705769-54cb552688a94_small\">\n                                                                firefox\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000125504&quot;,&quot;name&quot;:&quot;internet-explorer&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                internet-explorer\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089499&quot;,&quot;name&quot;:&quot;safari&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                safari\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090638&quot;,&quot;name&quot;:&quot;ipad&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                ipad\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090218&quot;,&quot;name&quot;:&quot;opera&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                opera\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000002871462&quot;,&quot;name&quot;:&quot;apple-watch&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                apple-watch\n                            </a>\n                        </li>\n                                    </ul>\n            </div>\n                    <div role=\"tabpanel\" class=\"tab-pane \" id=\"其它\">\n                <ul class=\"taglist--inline\">\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000089409&quot;,&quot;name&quot;:&quot;html5&quot;,&quot;iconUrl&quot;:&quot;https:\\/\\/sfault-avatar.b0.upaiyun.com\\/102\\/500\\/1025005915-54cb538538eea_small&quot;}\" href=\"javascript: void(0);\">\n                                                                    <img src=\"https://sfault-avatar.b0.upaiyun.com/102/500/1025005915-54cb538538eea_small\">\n                                                                html5\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000002893277&quot;,&quot;name&quot;:&quot;react.js&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                react.js\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090137&quot;,&quot;name&quot;:&quot;\\u641c\\u7d22\\u5f15\\u64ce&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                搜索引擎\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000123810&quot;,&quot;name&quot;:&quot;virtualenv&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                virtualenv\n                            </a>\n                        </li>\n                                            <li class=\"mb5\">\n                            <a class=\"tag\" data-tag=\"{&quot;id&quot;:&quot;1040000000090316&quot;,&quot;name&quot;:&quot;lucene&quot;,&quot;iconUrl&quot;:&quot;&quot;}\" href=\"javascript: void(0);\">\n                                                                lucene\n                            </a>\n                        </li>\n                                    </ul>\n            </div>\n            </div>\n</div>\n\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div><!-- end .post-topheader -->\n\n                <div class=\"visible-lg\">\n                    <div class=\"side-widget\">\n                        <i id=\"side-widget-votes-num\" class=\"\">8</i>\n                        <a class=\"btn btn-default item \" id=\"side-widget-votes-btn\">\n                            <i class=\"fa fa-thumbs-o-up\"></i>\n                        </a>\n                        <i class=\"fa fa-bookmark item\" id=\"side-widget-bookmarks-btn\"></i>\n                        <i class=\"fa fa-weibo item\"></i>\n                        <i class=\"fa fa-weixin item\" data-toggle=\"popover\" data-placement=\"right\" data-original-title=\"\" title=\"\"></i>\n                        <i class=\"fa fa-twitter item\"></i>\n                        <i class=\"fa fa-facebook item\"></i>\n                                            </div>\n                </div>\n\n                \n                <div class=\"article fmt article__content\" data-id=\"1190000015347051\" data-license=\"\">\n                    \n<p>  排序算法主要针对的是数组，所以，在开始学习之前，我们先自己新建一种数据结构来方便我们的学习。</p>\n<div class=\"widget-codetool\" style=\"display: none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function ArrayData () {\n  let ret = []\n  this.times = 0  // 统计执行次数\n  this.push = (item) => {\n    ret.push(item)\n  }\n  this.toString = () => {\n    return ret.join()\n  }\n}\n\nconst arr = [34, 11, 45, 22, 31, 99, 68, 54]\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre><code class=\"javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">ArrayData</span> (<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">let</span> ret = []\n  <span class=\"hljs-keyword\">this</span>.times = <span class=\"hljs-number\">0</span>  <span class=\"hljs-comment\">// 统计执行次数</span>\n  <span class=\"hljs-keyword\">this</span>.push = <span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> {\n    ret.push(item)\n  }\n  <span class=\"hljs-keyword\">this</span>.toString = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">return</span> ret.join()\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> arr = [<span class=\"hljs-number\">34</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">45</span>, <span class=\"hljs-number\">22</span>, <span class=\"hljs-number\">31</span>, <span class=\"hljs-number\">99</span>, <span class=\"hljs-number\">68</span>, <span class=\"hljs-number\">54</span>]</code></pre>\n<h2 id=\"articleHeader0\">冒泡排序</h2>\n<p>  比较相邻两个数的大小，如果前面的数大于后面，则交换这两个数的位置。要排序n个数字，需要经历n-1次的遍历。</p>\n<p>  按照字面要求，我们写出来的代码是这样的</p>\n<div class=\"widget-codetool\" style=\"display: none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function ArrayData () {\n    // ......\n    this.bubbleSort = function () {\n        let length = ret.length;\n        for (let i = 0; i < length; i++) {\n          for (let j = 0; j < length - 1; j++) {\n            this.times++\n            if (ret[j] > ret[j + 1]) {\n              [ret[j], ret[j + 1]] = [ret[j + 1], ret[j]]\n            }\n          }\n        }\n    }\n}\n\nlet tmp = new ArrayData()\narr.forEach((item) => {\n    tmp.push(item)\n})\ntmp.bubbleSort()\nconsole.log(tmp.times)    //  56\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre><code class=\"javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">ArrayData</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-comment\">// ......</span>\n    <span class=\"hljs-keyword\">this</span>.bubbleSort = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-keyword\">let</span> length = ret.length;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; length; i++) {\n          <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; length - <span class=\"hljs-number\">1</span>; j++) {\n            <span class=\"hljs-keyword\">this</span>.times++\n            <span class=\"hljs-keyword\">if</span> (ret[j] &gt; ret[j + <span class=\"hljs-number\">1</span>]) {\n              [ret[j], ret[j + <span class=\"hljs-number\">1</span>]] = [ret[j + <span class=\"hljs-number\">1</span>], ret[j]]\n            }\n          }\n        }\n    }\n}\n\n<span class=\"hljs-keyword\">let</span> tmp = <span class=\"hljs-keyword\">new</span> ArrayData()\narr.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> {\n    tmp.push(item)\n})\ntmp.bubbleSort()\n<span class=\"hljs-built_in\">console</span>.log(tmp.times)    <span class=\"hljs-comment\">//  56</span></code></pre>\n<p>  显然这种简单粗暴的排序方式有很大的提升空间，比如，我们可以检测每次排序，如果顺序已经排列成功，就没必要执行之后的循环了。</p>\n<div class=\"widget-codetool\" style=\"display: none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function ArrayData () {\n    // ......\n    this.bubbleSort = function () {\n        let length = ret.length;\n        for (let i = 0; i < length; i++) {\n          let change = false\n          for (let j = 0; j < length - 1; j++) {\n            this.times++Ï\n            if (ret[j] > ret[j + 1]) {\n              [ret[j], ret[j + 1]] = [ret[j + 1], ret[j]]\n              change = true\n            }\n          }\n          if (!change) {\n            break\n          }\n        }\n    }\n}\n\nlet tmp = new ArrayData()\narr.forEach((item) => {\n    tmp.push(item)\n})\ntmp.bubbleSort()\nconsole.log(tmp.times)    //  21\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre><code class=\"javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">ArrayData</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-comment\">// ......</span>\n    <span class=\"hljs-keyword\">this</span>.bubbleSort = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-keyword\">let</span> length = ret.length;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; length; i++) {\n          <span class=\"hljs-keyword\">let</span> change = <span class=\"hljs-literal\">false</span>\n          <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; length - <span class=\"hljs-number\">1</span>; j++) {\n            <span class=\"hljs-keyword\">this</span>.times++Ï\n            <span class=\"hljs-keyword\">if</span> (ret[j] &gt; ret[j + <span class=\"hljs-number\">1</span>]) {\n              [ret[j], ret[j + <span class=\"hljs-number\">1</span>]] = [ret[j + <span class=\"hljs-number\">1</span>], ret[j]]\n              change = <span class=\"hljs-literal\">true</span>\n            }\n          }\n          <span class=\"hljs-keyword\">if</span> (!change) {\n            <span class=\"hljs-keyword\">break</span>\n          }\n        }\n    }\n}\n\n<span class=\"hljs-keyword\">let</span> tmp = <span class=\"hljs-keyword\">new</span> ArrayData()\narr.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> {\n    tmp.push(item)\n})\ntmp.bubbleSort()\n<span class=\"hljs-built_in\">console</span>.log(tmp.times)    <span class=\"hljs-comment\">//  21</span></code></pre>\n<p>  其实还是有优化的空间的。举个例子，假设一共8个数，第一轮循环，会把最大的数冒泡排到第8位，第二轮循环，会把第二大的数排到第7位，所以，本轮循坏其实没必要考虑最后一位了。同理，下一轮循环就不需要考虑后两位。改进后的代码如下:</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function ArrayData () {\n    // ......\n    this.bubbleSort = function () {\n        let length = ret.length;\n        for (let i = 0; i < length; i++) {\n          let change = false\n          for (let j = 0; j < length - 1 - i; j++) {\n            this.times++\n            if (ret[j] > ret[j + 1]) {\n              [ret[j], ret[j + 1]] = [ret[j + 1], ret[j]]\n              change = true\n            }\n          }\n          if (!change) {\n            break\n          }\n        }\n    }\n}\n\nlet tmp = new ArrayData()\narr.forEach((item) => {\n    tmp.push(item)\n})\ntmp.bubbleSort()\nconsole.log(tmp.times)    //  18\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre><code class=\"javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">ArrayData</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-comment\">// ......</span>\n    <span class=\"hljs-keyword\">this</span>.bubbleSort = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-keyword\">let</span> length = ret.length;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; length; i++) {\n          <span class=\"hljs-keyword\">let</span> change = <span class=\"hljs-literal\">false</span>\n          <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; length - <span class=\"hljs-number\">1</span> - i; j++) {\n            <span class=\"hljs-keyword\">this</span>.times++\n            <span class=\"hljs-keyword\">if</span> (ret[j] &gt; ret[j + <span class=\"hljs-number\">1</span>]) {\n              [ret[j], ret[j + <span class=\"hljs-number\">1</span>]] = [ret[j + <span class=\"hljs-number\">1</span>], ret[j]]\n              change = <span class=\"hljs-literal\">true</span>\n            }\n          }\n          <span class=\"hljs-keyword\">if</span> (!change) {\n            <span class=\"hljs-keyword\">break</span>\n          }\n        }\n    }\n}\n\n<span class=\"hljs-keyword\">let</span> tmp = <span class=\"hljs-keyword\">new</span> ArrayData()\narr.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> {\n    tmp.push(item)\n})\ntmp.bubbleSort()\n<span class=\"hljs-built_in\">console</span>.log(tmp.times)    <span class=\"hljs-comment\">//  18</span></code></pre>\n<h2 id=\"articleHeader1\">选择排序</h2>\n<p>  遍历数组，找出最小的数排在第一位，第二轮循环找出第二小的数放在第二位，以此类推。</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function ArrayData () {\n    // ......\n  this.selectionSort = function () {\n    let length = ret.length\n    for (let i = 0; i < length - 1; i++) {\n      let minIndex = i\n      for (let j = i; j < length; j++) {\n        if (ret[j] < ret[minIndex]) {\n          minIndex = j\n        }\n      }\n      if (i !== minIndex) {\n        [ret[i], ret[minIndex]] = [ret[minIndex], ret[i]]\n      }\n    }\n  }\n}\n\nlet tmp = new ArrayData()\narr.forEach((item) => {\n    tmp.push(item)\n})\ntmp.selectionSort()\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre><code class=\"javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">ArrayData</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-comment\">// ......</span>\n  <span class=\"hljs-keyword\">this</span>.selectionSort = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">let</span> length = ret.length\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; length - <span class=\"hljs-number\">1</span>; i++) {\n      <span class=\"hljs-keyword\">let</span> minIndex = i\n      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = i; j &lt; length; j++) {\n        <span class=\"hljs-keyword\">if</span> (ret[j] &lt; ret[minIndex]) {\n          minIndex = j\n        }\n      }\n      <span class=\"hljs-keyword\">if</span> (i !== minIndex) {\n        [ret[i], ret[minIndex]] = [ret[minIndex], ret[i]]\n      }\n    }\n  }\n}\n\n<span class=\"hljs-keyword\">let</span> tmp = <span class=\"hljs-keyword\">new</span> ArrayData()\narr.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> {\n    tmp.push(item)\n})\ntmp.selectionSort()</code></pre>\n<h2 id=\"articleHeader2\">插入排序</h2>\n<p>  把数组分成前后两部分，前面的一部分是排好序的，然后分别把后面一部分的数字插入到前面排好序的数组中。所以，刚开始时设定第一个元素为排好序的部分，分别把后面的数字插入进来。</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function ArrayData () {\n    // ......\n  this.insertSort = function () {\n    let length = ret.length\n    let j\n    for (let i = 1; i < length; i++) {\n      let currentNumber = ret[i]\n      for (j = i - 1; j >= 0 &amp;&amp; ret[j] > currentNumber; j--) {\n        ret[j + 1] = ret[j] \n      }\n      ret[j + 1] = currentNumber \n    }\n  }\n}\n\nlet tmp = new ArrayData()\narr.forEach((item) => {\n    tmp.push(item)\n})\ntmp.insertSort()\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre><code class=\"javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">ArrayData</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-comment\">// ......</span>\n  <span class=\"hljs-keyword\">this</span>.insertSort = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">let</span> length = ret.length\n    <span class=\"hljs-keyword\">let</span> j\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; length; i++) {\n      <span class=\"hljs-keyword\">let</span> currentNumber = ret[i]\n      <span class=\"hljs-keyword\">for</span> (j = i - <span class=\"hljs-number\">1</span>; j &gt;= <span class=\"hljs-number\">0</span> &amp;&amp; ret[j] &gt; currentNumber; j--) {\n        ret[j + <span class=\"hljs-number\">1</span>] = ret[j] \n      }\n      ret[j + <span class=\"hljs-number\">1</span>] = currentNumber \n    }\n  }\n}\n\n<span class=\"hljs-keyword\">let</span> tmp = <span class=\"hljs-keyword\">new</span> ArrayData()\narr.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> {\n    tmp.push(item)\n})\ntmp.insertSort()</code></pre>\n<h2 id=\"articleHeader3\">快速排序</h2>\n<p>  选一个数作为基准数，遍历数列，把比它<br>放到他前面，比他小的放到他后面，然后再对基准数前后的数列递归上述操作，直到数列长度为1。</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function ArrayData () {\n    // ......\n    this.quickSort = function () {\n        quick(ret, 0, ret.length - 1);\n    \n        function quick(array, left, right) {\n          let index\n          if (array.length > 1) {\n            index = partition(array, left, right)\n            if (left < index - 1) {\n              quick(array, left, index - 1)\n            }\n            if (right > index) {\n              quick(array, index, right)\n            }\n          }\n          return array\n        }\n    \n        function partition(array, left, right) {\n          let pivot = array[Math.floor((right + left) / 2)],\n            i = left,\n            j = right;\n          while (i <= j) {\n            while (array[i] < pivot) {\n              i++\n            }\n            while (array[j] > pivot) {\n              j--\n            }\n            if (i <= j) {\n              swap(array, i, j);\n              i++;\n              j--;\n            }\n          }\n          return i\n        }\n    \n        function swap(array, i, j) {\n          [array[i], array[j]] = [array[j], array[i]]\n        }\n    }\n}\n\nlet tmp = new ArrayData()\narr.forEach((item) => {\n  tmp.push(item)\n})\ntmp.quickSort()\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre><code class=\"javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">ArrayData</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-comment\">// ......</span>\n    <span class=\"hljs-keyword\">this</span>.quickSort = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        quick(ret, <span class=\"hljs-number\">0</span>, ret.length - <span class=\"hljs-number\">1</span>);\n    \n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">quick</span>(<span class=\"hljs-params\">array, left, right</span>) </span>{\n          <span class=\"hljs-keyword\">let</span> index\n          <span class=\"hljs-keyword\">if</span> (array.length &gt; <span class=\"hljs-number\">1</span>) {\n            index = partition(array, left, right)\n            <span class=\"hljs-keyword\">if</span> (left &lt; index - <span class=\"hljs-number\">1</span>) {\n              quick(array, left, index - <span class=\"hljs-number\">1</span>)\n            }\n            <span class=\"hljs-keyword\">if</span> (right &gt; index) {\n              quick(array, index, right)\n            }\n          }\n          <span class=\"hljs-keyword\">return</span> array\n        }\n    \n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">partition</span>(<span class=\"hljs-params\">array, left, right</span>) </span>{\n          <span class=\"hljs-keyword\">let</span> pivot = array[<span class=\"hljs-built_in\">Math</span>.floor((right + left) / <span class=\"hljs-number\">2</span>)],\n            i = left,\n            j = right;\n          <span class=\"hljs-keyword\">while</span> (i &lt;= j) {\n            <span class=\"hljs-keyword\">while</span> (array[i] &lt; pivot) {\n              i++\n            }\n            <span class=\"hljs-keyword\">while</span> (array[j] &gt; pivot) {\n              j--\n            }\n            <span class=\"hljs-keyword\">if</span> (i &lt;= j) {\n              swap(array, i, j);\n              i++;\n              j--;\n            }\n          }\n          <span class=\"hljs-keyword\">return</span> i\n        }\n    \n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">swap</span>(<span class=\"hljs-params\">array, i, j</span>) </span>{\n          [array[i], array[j]] = [array[j], array[i]]\n        }\n    }\n}\n\n<span class=\"hljs-keyword\">let</span> tmp = <span class=\"hljs-keyword\">new</span> ArrayData()\narr.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> {\n  tmp.push(item)\n})\ntmp.quickSort()</code></pre>\n<p>  一句话实现快速排序。选择第一个元素作为参考元素，利用filter把数组分成大于参考元素和小于参考元素的两个数组，并对这两个数组递归调用快排函数。</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function quickSort(arr) {\n  return arr.length <= 1 ? arr : quickSort(arr.slice(1).filter((item) => item <= arr[0])).concat(arr[0], quickSort(arr.slice(1).filter((item) => item > arr[0])))\n}\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre><code class=\"javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">quickSort</span>(<span class=\"hljs-params\">arr</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> arr.length &lt;= <span class=\"hljs-number\">1</span> ? arr : quickSort(arr.slice(<span class=\"hljs-number\">1</span>).filter(<span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> item &lt;= arr[<span class=\"hljs-number\">0</span>])).concat(arr[<span class=\"hljs-number\">0</span>], quickSort(arr.slice(<span class=\"hljs-number\">1</span>).filter(<span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> item &gt; arr[<span class=\"hljs-number\">0</span>])))\n}</code></pre>\n<h2 id=\"articleHeader4\">希尔排序</h2>\n<p>  希尔排序是把数组按下标的一定增量分组，对每组进行插入排，随着增量逐渐减少，每个数组的长度越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止。</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function ArrayData () {\n    // ......\n  this.shellSort = function () {\n    let length = ret.length\n    for (let step = Math.floor(length / 2); step > 0; step = Math.floor(step / 2)) {\n      for (let i = 0; i < step; i++) {\n        shellInsertSort(i, step)\n      }\n    }\n\n    function shellInsertSort(index, step) {\n      let length = ret.length\n      let j\n      for (let i = index; i < length; i += step) {\n        let currentNumber = ret[i]\n        for (j = i - step; j >= 0 &amp;&amp; ret[j] > currentNumber; j -= step) {\n          ret[j + step] = ret[j]\n        }\n        ret[j + step] = currentNumber\n      }\n    }\n  }\n}\n\nlet tmp = new ArrayData()\narr.forEach((item) => {\n  tmp.push(item)\n})\ntmp.shellSort()\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre><code class=\"javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">ArrayData</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-comment\">// ......</span>\n  <span class=\"hljs-keyword\">this</span>.shellSort = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">let</span> length = ret.length\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> step = <span class=\"hljs-built_in\">Math</span>.floor(length / <span class=\"hljs-number\">2</span>); step &gt; <span class=\"hljs-number\">0</span>; step = <span class=\"hljs-built_in\">Math</span>.floor(step / <span class=\"hljs-number\">2</span>)) {\n      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; step; i++) {\n        shellInsertSort(i, step)\n      }\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">shellInsertSort</span>(<span class=\"hljs-params\">index, step</span>) </span>{\n      <span class=\"hljs-keyword\">let</span> length = ret.length\n      <span class=\"hljs-keyword\">let</span> j\n      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = index; i &lt; length; i += step) {\n        <span class=\"hljs-keyword\">let</span> currentNumber = ret[i]\n        <span class=\"hljs-keyword\">for</span> (j = i - step; j &gt;= <span class=\"hljs-number\">0</span> &amp;&amp; ret[j] &gt; currentNumber; j -= step) {\n          ret[j + step] = ret[j]\n        }\n        ret[j + step] = currentNumber\n      }\n    }\n  }\n}\n\n<span class=\"hljs-keyword\">let</span> tmp = <span class=\"hljs-keyword\">new</span> ArrayData()\narr.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> {\n  tmp.push(item)\n})\ntmp.shellSort()</code></pre>\n<h2 id=\"articleHeader5\">归并排序</h2>\n<p>  归并排序采用分治的思想，将已有序的子序列合并，得到完全有序的序列。所以我们把数列分割成不超过两个元素的数组，然后将其合并。</p>\n<div class=\"widget-codetool\" style=\"display:none;\">\n      <div class=\"widget-codetool--inner\">\n      <span class=\"selectCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"全选\"></span>\n      <span type=\"button\" class=\"copyCode code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" data-clipboard-text=\"function ArrayData () {\n    // ......\n  this.mergeSort = function () {\n    ret = mergeSortFun(ret)\n\n    function mergeSortFun(arr) {\n      let length = arr.length\n      if (length <= 1) {\n        return arr\n      }\n      let mid = Math.floor(length / 2),\n        left = arr.slice(0, mid),\n        right = arr.slice(mid, length)\n      return mengeConnect(mergeSortFun(left), mergeSortFun(right))\n    }\n\n    function mengeConnect(left, right) {\n      let\n        leftIndex = 0,\n        rightIndex = 0,\n        result = []\n      while (leftIndex < left.length &amp;&amp; rightIndex < right.length) {\n        result.push(left[leftIndex] < right[rightIndex] ? left[leftIndex++] : right[rightIndex++])\n      }\n      while (leftIndex < left.length) {\n        result.push(left[leftIndex++])\n      }\n      while (rightIndex < right.length) {\n        result.push(right[rightIndex++])\n      }\n      return result\n    }\n  }\n}\n\nlet tmp = new ArrayData()\narr.forEach((item) => {\n  tmp.push(item)\n})\ntmp.mergeSort()\" title=\"\" data-original-title=\"复制\"></span>\n      <span type=\"button\" class=\"saveToNote code-tool\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"放进笔记\"></span>\n      </div>\n      </div><pre><code class=\"javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">ArrayData</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-comment\">// ......</span>\n  <span class=\"hljs-keyword\">this</span>.mergeSort = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    ret = mergeSortFun(ret)\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">mergeSortFun</span>(<span class=\"hljs-params\">arr</span>) </span>{\n      <span class=\"hljs-keyword\">let</span> length = arr.length\n      <span class=\"hljs-keyword\">if</span> (length &lt;= <span class=\"hljs-number\">1</span>) {\n        <span class=\"hljs-keyword\">return</span> arr\n      }\n      <span class=\"hljs-keyword\">let</span> mid = <span class=\"hljs-built_in\">Math</span>.floor(length / <span class=\"hljs-number\">2</span>),\n        left = arr.slice(<span class=\"hljs-number\">0</span>, mid),\n        right = arr.slice(mid, length)\n      <span class=\"hljs-keyword\">return</span> mengeConnect(mergeSortFun(left), mergeSortFun(right))\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">mengeConnect</span>(<span class=\"hljs-params\">left, right</span>) </span>{\n      <span class=\"hljs-keyword\">let</span>\n        leftIndex = <span class=\"hljs-number\">0</span>,\n        rightIndex = <span class=\"hljs-number\">0</span>,\n        result = []\n      <span class=\"hljs-keyword\">while</span> (leftIndex &lt; left.length &amp;&amp; rightIndex &lt; right.length) {\n        result.push(left[leftIndex] &lt; right[rightIndex] ? left[leftIndex++] : right[rightIndex++])\n      }\n      <span class=\"hljs-keyword\">while</span> (leftIndex &lt; left.length) {\n        result.push(left[leftIndex++])\n      }\n      <span class=\"hljs-keyword\">while</span> (rightIndex &lt; right.length) {\n        result.push(right[rightIndex++])\n      }\n      <span class=\"hljs-keyword\">return</span> result\n    }\n  }\n}\n\n<span class=\"hljs-keyword\">let</span> tmp = <span class=\"hljs-keyword\">new</span> ArrayData()\narr.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> {\n  tmp.push(item)\n})\ntmp.mergeSort()</code></pre>\n\n                </div>\n                                                \n                \n\n                <div class=\"clearfix mt10\">\n                    <ul class=\"article-operation list-inline pull-left mt15\"><li><a target=\"_blank\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/\"><img class=\"mb5\" src=\"https://static.segmentfault.com/v-5b3afb96/global/img/creativecommons-cc.svg\" height=\"20\"></a></li><li class=\"dropdown js__content-ops hidden-xs\" data-module=\"article\" data-id=\"1190000015347051\" data-typetext=\"文章\"><a href=\"javascript:void(0);\" class=\"dropdown-toggle text-muted\" data-toggle=\"dropdown\"><i class=\"fa fa-ellipsis-h\" aria-hidden=\"true\"></i></a><ul class=\"dropdown-menu dropdown-menu-left\"><li><a href=\"#911\" data-toggle=\"modal\" data-target=\"#911\" data-action=\"report\">举报</a></li></ul></li></ul>\n                    <div class=\"pull-right mt-10 hidden-xs\">\n                        <div class=\"widget-share__full\" data-text=\"Javascript常见排序算法的笔记\" data-url=\"https://segmentfault.com/a/1190000015347051\" data-shorturl=\"http://sfau.lt/b5bcyDf\"><div class=\"widget-share-network sharer-0\" style=\"display: block;\"><ul class=\"sn-inline\"><li data-network=\"weibo\"><a href=\"javascript:void(0);\" class=\"entypo-weibo icon-sn-weibo share-1\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"分享至新浪微博\">新浪微博</a></li><li data-network=\"wechart\"><a href=\"javascript:void(0);\" class=\"entypo-wechart icon-sn-weixin share-2\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"分享至微信\">微信</a></li><li data-network=\"twitter\"><a href=\"javascript:void(0);\" class=\"entypo-twitter icon-sn-twitter share-3\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"分享至 Twitter\">Twitter</a></li><li data-network=\"facebook\"><a href=\"javascript:void(0);\" class=\"entypo-facebook icon-sn-facebook share-4\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"分享至 Facebook\">Facebook</a></li></ul></div><a type=\"button\" class=\"btn btn-sm shareMore btn-sn-more\" data-toggle=\"popover\" data-placement=\"top\" data-url=\"https://segmentfault.com/a/1190000015347051\" data-shorturl=\"http://sfau.lt/b5bcyDf\"><span class=\"icon-sn-dotted\" data-original-title=\"\" title=\"\"></span><strong class=\"visible-xs-inline\">•••</strong></a></div>\n\n\n                    </div>\n                </div>\n                <div class=\"mt10 text-center mb30\"><button type=\"button\" id=\"mainLike\" data-id=\"1190000015347051\" class=\"btn btn-success btn-lg mr15 \"><span id=\"mainLikeText\">赞</span>&nbsp;&nbsp;<span class=\"seprator\">|</span>&nbsp;&nbsp;\n                                <span id=\"mainLikeNum\">8 </span></button><button type=\"button\" id=\"mainBookmark\" data-type=\"article\" data-id=\"1190000015347051\" class=\"btn btn-default btn-lg \"><span id=\"mainBookmarkText\">收藏</span>&nbsp;&nbsp;<span class=\"seprator\">|</span>&nbsp;&nbsp;<span id=\"mainBookmarkNum\">23</span></button></div>\n                \n\n                                    <div class=\"recommend-post pt30 mt40 mb30 border-top hidden-lg hidden-md\">\n                        <div class=\"row\">\n                                                        <div class=\"col-md-6\">\n                                <h4 class=\"mt0 mb20\">你可能感兴趣的文章</h4>\n                                <ul class=\"widget-links list-unstyled\">\n                                                                            <li class=\"widget-links__item mb0\">\n                                            <a href=\"/a/1190000009332932\" title=\"十大经典排序算法的 JavaScript 实现\">十大经典排序算法的 JavaScript 实现</a>\n                                        </li>\n                                                                            <li class=\"widget-links__item mb0\">\n                                            <a href=\"/a/1190000009426421\" title=\"Javascript算法——快速排序\">Javascript算法——快速排序</a>\n                                        </li>\n                                                                            <li class=\"widget-links__item mb0\">\n                                            <a href=\"/a/1190000006899632\" title=\"javascript实现排序算法\">javascript实现排序算法</a>\n                                        </li>\n                                                                            <li class=\"widget-links__item mb0\">\n                                            <a href=\"/a/1190000009461832\" title=\"Javascript算法——希尔排序\">Javascript算法——希尔排序</a>\n                                        </li>\n                                                                            <li class=\"widget-links__item mb0\">\n                                            <a href=\"/a/1190000000669157\" title=\"JavaScript算法详解——快速排序\">JavaScript算法详解——快速排序</a>\n                                        </li>\n                                                                    </ul>\n                            </div>\n                            \n                                                    </div>\n\n                    </div>\n                \n                \n        <div class=\"comments--news comments--default comments--article \n    \" data-id=\"1190000015347051\" data-user-id=\"\" data-author-id=\"1030000015054607 \" data-is-admin=\"null\" id=\"goToReplyArea\">\n                    <div class=\"mb10 clearfix\">\n                <strong class=\"comments-stat pull-left mr10\">评论</strong>\n\n                                                    <div class=\"btn-group btn-group-xs pull-right comments-sort btn-group-menu\" role=\"menu\">\n                        <a href=\"javascript:;\" class=\"btn btn-default active\" data-sort=\"default\">默认排序</a>\n                        <a href=\"javascript:;\" class=\"btn btn-default\" data-sort=\"desc\">时间排序</a>\n                    </div>\n                            </div>\n                <div class=\"comments-container\">\n                                <div class=\"comments-list\">\n            </div>\n    <div class=\"comments-loading hide\">载入中...</div>\n        <div class=\"comments-more hide\"><a href=\"javascript:;\">显示更多评论</a></div>\n    \n\n                                    <div class=\"comments-box\" id=\"goToReplyEditor\">\n                <div class=\"pull-left\">\n                    <img class=\"avatar-32 \" src=\"https://static.segmentfault.com/v-5b3afb96/global/img/user-128.png\" alt=\"\">\n                </div>\n                <div class=\"comments-box-content\">\n                    <form action=\"/api/article/1190000015347051/comments/add\">\n                        <div class=\"form-group mb0\">\n                            <textarea name=\"text\" rows=\"3\" class=\"form-control\" placeholder=\"文明社会，理性评论\"></textarea>\n                            <div class=\"mt15 text-right\">\n                                <button type=\"button\" class=\"hide\"></button>\n                                <button class=\" btn btn-primary\" type=\"button\">发布评论</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n                                                        </div>\n    </div>\n\n\n                                    \n                \n                                                <div id=\"mm_124884735_33830642_143436142\" class=\"mt20 ad-detail-mm hidden-xs\"><div id=\"ac_wrap_mm_124884735_33830642_143436142\" style=\"width:728px\"><script async=\"\"></script>\n<!-- 中部横幅广告位 -->\n<ins class=\"adsbygoogle\" style=\"display:inline-block;width:728px;height:90px\" data-ad-client=\"ca-pub-6330872677300335\" data-ad-slot=\"5598290435\" data-adsbygoogle-status=\"done\"><ins id=\"aswift_0_expand\" style=\"display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;\"><ins id=\"aswift_0_anchor\" style=\"display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;\"><iframe width=\"728\" height=\"90\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allowfullscreen=\"true\" onload=\"var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}\" id=\"aswift_0\" name=\"aswift_0\" style=\"left:0;position:absolute;top:0;width:728px;height:90px;\"></iframe></ins></ins></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script><script type=\"text/javascript\"></script><script type=\"text/javascript\"></script><script type=\"text/javascript\"></script><script type=\"text/javascript\"></script><script type=\"text/javascript\"></script></div></div>\n                <style>\n                    #mm_124884735_33830642_143436142 {\n                        display: flex;\n                        justify-content: center;\n                    }\n                </style>\n\n            </div>","time":"2018/07/03 13:34:34","__v":0},{"_id":"59dd62bc3e601b09786e6e29","name":"爱的越深，伤的越狠","img":"./static/avatar/avatar0.jpg","title":"你那一笑倾国倾城","content":"出自汉代李延年（汉武帝的李夫人的哥哥）北方有佳人。绝世而独立。一顾倾人城。再顾倾人国。宁不知倾城与倾国。佳人难再得。","time":"2018/5/10 11:29:38","__v":0},{"_id":"59dd62a43e601b09786e6e28","name":"爱你不如爱自己","img":"./static/avatar/avatar4.jpg","title":"vue2.0","content":"<div style='width:100%;text-align:center'><img src='./static/img/vue.png' style='width:150px'><p>Vue.js（读音 /vjuː/, 类似于 view） 是一套构建用户界面的渐进式框架。</p><p>Vue 只关注视图层， 采用自底向上增量开发的设计。</p><p>Vue 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。</p></div>","time":"2018/4/5 5:25:38","__v":0},{"_id":"59dd62693e601b09786e6e27","name":"呐傷?妳懂","img":"./static/avatar/avatar3.jpg","title":"json数据","content":"在线校验json数据http://www.bejson.com/<br>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。\n它基于ECMAScript的一个子集。 JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯(包括C、C++、C#、Java、JavaScript、Perl、Python等)。\n这些特性使JSON成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成(一般用于提升网络传输速率)。","time":"2018/3/10 15:29:38","__v":0},{"_id":"59dd623b3e601b09786e6e26","name":"缺爱先森","img":"./static/avatar/avatar2.jpg","title":"佳人","content":"知倾城与倾国。佳人难再得。","time":"2017/10/11 14:25:14","__v":0},{"_id":"59dd62063e601b09786e6e25","name":"风吹裤衩屁屁凉°","img":"./static/avatar/avatar1.jpg","title":"秋叶","content":"<p>我曾经像一片秋叶</p>","time":"2017/10/10 15:29:38","__v":0}]